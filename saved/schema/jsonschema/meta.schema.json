{
    "$defs": {
        "ExtColumnDesc": {
            "additionalProperties": false,
            "description": "Catch-all external column description",
            "properties": {
                "atomic_name": {
                    "description": "Short-form name / atom: lower-case, no special characters excepting underscores",
                    "pattern": "^:?[a-z]+[[a-z]|_|]*$",
                    "type": "string"
                }
            },
            "required": [
                "atomic_name"
            ],
            "title": "ExtColumnDesc",
            "type": "object"
        },
        "JobDesc": {
            "additionalProperties": false,
            "description": "Manifest: job specification attributes which specific job sub-classes inherit",
            "properties": {
                "atomic_name": {
                    "description": "Short-form name / atom: lower-case, no special characters excepting underscores",
                    "pattern": "^:?[a-z]+[[a-z]|_|]*$",
                    "type": "string"
                },
                "job_scope_collected": {
                    "description": "A collection of column descriptions which are collected or sampled",
                    "items": {
                        "$ref": "#/$defs/ScopeDesc"
                    },
                    "type": "array"
                },
                "job_scope_descriptive": {
                    "description": "A collection of column descriptions which describe something about the world",
                    "items": {
                        "$ref": "#/$defs/ScopeDesc"
                    },
                    "type": "array"
                },
                "job_scope_modelled": {
                    "description": "A collection of column descriptions which are modelled or simulated",
                    "items": {
                        "$ref": "#/$defs/ScopeDesc"
                    },
                    "type": "array"
                },
                "job_type": {
                    "$ref": "#/$defs/JobType",
                    "description": "While this is analogous to Dublin Core's notion of type, it is specific to jobs proper, because there is a well-defined range of the jobs we know about. Undefined job types cannot be processed."
                },
                "title": {
                    "description": "Concise human-readable name for the element",
                    "type": "string"
                }
            },
            "required": [
                "atomic_name",
                "job_type"
            ],
            "title": "JobDesc",
            "type": "object"
        },
        "JobType": {
            "description": "",
            "enum": [
                "ignore",
                "density"
            ],
            "title": "JobType",
            "type": "string"
        },
        "ManifestDesc": {
            "additionalProperties": false,
            "description": "Manifest: job invocation specification",
            "properties": {
                "atomic_name": {
                    "description": "Short-form name / atom: lower-case, no special characters excepting underscores",
                    "pattern": "^:?[a-z]+[[a-z]|_|]*$",
                    "type": "string"
                },
                "gcp_source": {
                    "description": "GCP account of the generator of the manifest",
                    "type": "string"
                },
                "jobs": {
                    "description": "Specification of operations to run on resources and schemas provided",
                    "items": {
                        "$ref": "#/$defs/JobDesc"
                    },
                    "type": "array"
                },
                "local_version": {
                    "description": "Version number of local submission utility",
                    "type": "string"
                },
                "tables": {
                    "description": "Specification of mappings between resources and schemas, as well as columns or dimensions to bring into into scope",
                    "items": {
                        "$ref": "#/$defs/TableDesc"
                    },
                    "type": "array"
                }
            },
            "required": [
                "atomic_name",
                "tables",
                "jobs"
            ],
            "title": "ManifestDesc",
            "type": "object"
        },
        "ScopeDesc": {
            "additionalProperties": false,
            "description": "Manifest: column scope description and attributes including variable underpinning the column",
            "properties": {
                "column": {
                    "description": "Column name in table",
                    "type": "string"
                },
                "table": {
                    "description": "Table description from which column is drawn, specifically matching the `atomic_name' field of a given instance of a `TableDesc' class.",
                    "type": "string"
                },
                "variable": {
                    "description": "Name of variable underpinning column, specific to the job, used for pattern-matching",
                    "type": "string"
                }
            },
            "required": [
                "column",
                "variable",
                "table"
            ],
            "title": "ScopeDesc",
            "type": "object"
        },
        "TableDesc": {
            "additionalProperties": false,
            "description": "Manifest: data source descriptive attributes",
            "properties": {
                "atomic_name": {
                    "description": "Short-form name / atom: lower-case, no special characters excepting underscores",
                    "pattern": "^:?[a-z]+[[a-z]|_|]*$",
                    "type": "string"
                },
                "description": {
                    "description": "Human-readable description of the element",
                    "type": "string"
                },
                "resource_hash": {
                    "description": "Checksum of resource",
                    "type": "string"
                },
                "resource_path": {
                    "description": "Path or URI of resource",
                    "type": "string"
                },
                "schema_path_ttl": {
                    "description": "Path of URI of schema associated with resource (RDF/TTL conversion of LinkML YAML)",
                    "type": "string"
                },
                "schema_path_yaml": {
                    "description": "Path or URI of schema associated with resource (LinkML YAML)",
                    "type": "string"
                },
                "title": {
                    "description": "Concise human-readable name for the element",
                    "type": "string"
                }
            },
            "required": [
                "atomic_name",
                "resource_path",
                "resource_hash",
                "schema_path_yaml"
            ],
            "title": "TableDesc",
            "type": "object"
        }
    },
    "$id": "https://marine.gov.scot/metadata/saved/schema/meta/",
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "additionalProperties": true,
    "metamodel_version": "1.7.0",
    "title": "meta",
    "type": "object",
    "version": null
}