[
  {
    "objectID": "doc/utils/debugging.html",
    "href": "doc/utils/debugging.html",
    "title": "Debugging and troubleshooting",
    "section": "",
    "text": "Both fisdat(1) and fisup(1) print messages to the terminal. There are a few things we can use to debug behaviour.\n\n\n\nfisdat(1) has the --no-validate (-n for short) option. This will add a given data file and nominally associated schema, without using LinkML to validate the schema proper. This is primarily useful if your data are not in CSV format and you are only interested in uploading it (without doing any validation by running any jobs), but it may also be useful for circumstances in which LinkML fails to validate files which are valid (e.g. treatment of missing data is an open issue).\nfisup(1) does not validate data files against associated schema files, but it does convert YAML schema files to TTL, i.e. there are a number of circumstances in which it is effectively validating that the schema files are valid YAML. The --no-convert-schema option is useful in these circumstances.\n\n\n\nfisup(1) has several related options: - --no-convert-schema, which we have already encountered; - --no-upload, which performs conversion of schema files and the manifest file, but only simulates upload; - --dry-run, which simulates all operations, and does not write to the file-system.\nOriginally, there was only the single “dry run” option, simulating everything, but it became apparent that being able to test changes locally was very useful. There is a further, related option of note here, --force. The current behaviour is, during conversion, not to overwrite files which had already been converted, but this option overrides that.\n\n\n\nThere are two log levels common to both fisdat(1) and fisup(1): - --verbose (or -v for short), which sets the internal log level to “INFO” and shows debug messages by functions - --extra-verbose (or -vv for short), which sets the internal log level to “DEBUG” and shows considerably more log messages, including those generated by LinkML, RDFLib, &c. \nThe main intent behind adding these, especially the most verbose option, is to aid debugging when reporting issues on the issue tracker. Log messages tend to be quite long and may not be very informative.\nIn general, the messages printed to the terminal by the program try to make it fairly obvious which step has failed. Many Python programs show traces upon raising errors, whereas this one largely does not. (The errors are caught and messages in plainer language are printed instead.) The reason for this is that most of the errors were associated with the LinkML library which we are using, and were fairly non-specific, because they actually related to some of the libraries underneath (such as conversion between JSON-LD and RDF, or serialisation with RDFLib proper), and their interaction with network resources.\n\n\n\nThere is an outstanding issue with missing data, at least as far as us using LinkML goes. Whereas Python libraries like Pandas have a distinct notion of missing data (R and Pandas tend to use NA for this), and treat it differently from error state, the LinkML during validation does not accept these labels (it accepts an absolute empty field in CSV data only), and treats these fields as missing as equivalent to the column proper being optional.\nWhile this is certainly not ideal, and we opened an issue on the library’s issue tracker to discuss this with them, at least in terms of validating data files, at least in terms of validating the data we already have, the workaround is fairly straightforward:\n\nReplace NA labels (or whichever label(s) are used) with an empty field\nIn the corresponding schema files, set required: false for any columns which may have missing data\n\nA sample R script prep.R showing how one might do this is included in the sentinel cages example, using the write_tables() function, since this allows more control over the separator and treatment of the label for missing data (set it to ’’). The sentinel_cages_cleaned.csv file in that directory is the product of calling that script on the original Sentinel_cage_sampling_info_update_01122022.csv file.\nWhile not necessarily desirable, subsequent processing of the data doesn’t depend on LinkML (validation is with these local fisdat(1) and fisup(1)), the other option is to disable validation locally, since the initial ODE density/count model will accept any of the labels for missing data accepted by Pandas.",
    "crumbs": [
      "Fish data utilities",
      "Debugging and troubleshooting"
    ]
  },
  {
    "objectID": "doc/utils/debugging.html#outline",
    "href": "doc/utils/debugging.html#outline",
    "title": "Debugging and troubleshooting",
    "section": "",
    "text": "Both fisdat(1) and fisup(1) print messages to the terminal. There are a few things we can use to debug behaviour.",
    "crumbs": [
      "Fish data utilities",
      "Debugging and troubleshooting"
    ]
  },
  {
    "objectID": "doc/utils/debugging.html#disabling-validation",
    "href": "doc/utils/debugging.html#disabling-validation",
    "title": "Debugging and troubleshooting",
    "section": "",
    "text": "fisdat(1) has the --no-validate (-n for short) option. This will add a given data file and nominally associated schema, without using LinkML to validate the schema proper. This is primarily useful if your data are not in CSV format and you are only interested in uploading it (without doing any validation by running any jobs), but it may also be useful for circumstances in which LinkML fails to validate files which are valid (e.g. treatment of missing data is an open issue).\nfisup(1) does not validate data files against associated schema files, but it does convert YAML schema files to TTL, i.e. there are a number of circumstances in which it is effectively validating that the schema files are valid YAML. The --no-convert-schema option is useful in these circumstances.",
    "crumbs": [
      "Fish data utilities",
      "Debugging and troubleshooting"
    ]
  },
  {
    "objectID": "doc/utils/debugging.html#disabling-uploads-and-simulating-fisup1-behaviour",
    "href": "doc/utils/debugging.html#disabling-uploads-and-simulating-fisup1-behaviour",
    "title": "Debugging and troubleshooting",
    "section": "",
    "text": "fisup(1) has several related options: - --no-convert-schema, which we have already encountered; - --no-upload, which performs conversion of schema files and the manifest file, but only simulates upload; - --dry-run, which simulates all operations, and does not write to the file-system.\nOriginally, there was only the single “dry run” option, simulating everything, but it became apparent that being able to test changes locally was very useful. There is a further, related option of note here, --force. The current behaviour is, during conversion, not to overwrite files which had already been converted, but this option overrides that.",
    "crumbs": [
      "Fish data utilities",
      "Debugging and troubleshooting"
    ]
  },
  {
    "objectID": "doc/utils/debugging.html#verbose-logging",
    "href": "doc/utils/debugging.html#verbose-logging",
    "title": "Debugging and troubleshooting",
    "section": "",
    "text": "There are two log levels common to both fisdat(1) and fisup(1): - --verbose (or -v for short), which sets the internal log level to “INFO” and shows debug messages by functions - --extra-verbose (or -vv for short), which sets the internal log level to “DEBUG” and shows considerably more log messages, including those generated by LinkML, RDFLib, &c. \nThe main intent behind adding these, especially the most verbose option, is to aid debugging when reporting issues on the issue tracker. Log messages tend to be quite long and may not be very informative.\nIn general, the messages printed to the terminal by the program try to make it fairly obvious which step has failed. Many Python programs show traces upon raising errors, whereas this one largely does not. (The errors are caught and messages in plainer language are printed instead.) The reason for this is that most of the errors were associated with the LinkML library which we are using, and were fairly non-specific, because they actually related to some of the libraries underneath (such as conversion between JSON-LD and RDF, or serialisation with RDFLib proper), and their interaction with network resources.",
    "crumbs": [
      "Fish data utilities",
      "Debugging and troubleshooting"
    ]
  },
  {
    "objectID": "doc/utils/debugging.html#dealing-with-missing-data",
    "href": "doc/utils/debugging.html#dealing-with-missing-data",
    "title": "Debugging and troubleshooting",
    "section": "",
    "text": "There is an outstanding issue with missing data, at least as far as us using LinkML goes. Whereas Python libraries like Pandas have a distinct notion of missing data (R and Pandas tend to use NA for this), and treat it differently from error state, the LinkML during validation does not accept these labels (it accepts an absolute empty field in CSV data only), and treats these fields as missing as equivalent to the column proper being optional.\nWhile this is certainly not ideal, and we opened an issue on the library’s issue tracker to discuss this with them, at least in terms of validating data files, at least in terms of validating the data we already have, the workaround is fairly straightforward:\n\nReplace NA labels (or whichever label(s) are used) with an empty field\nIn the corresponding schema files, set required: false for any columns which may have missing data\n\nA sample R script prep.R showing how one might do this is included in the sentinel cages example, using the write_tables() function, since this allows more control over the separator and treatment of the label for missing data (set it to ’’). The sentinel_cages_cleaned.csv file in that directory is the product of calling that script on the original Sentinel_cage_sampling_info_update_01122022.csv file.\nWhile not necessarily desirable, subsequent processing of the data doesn’t depend on LinkML (validation is with these local fisdat(1) and fisup(1)), the other option is to disable validation locally, since the initial ODE density/count model will accept any of the labels for missing data accepted by Pandas.",
    "crumbs": [
      "Fish data utilities",
      "Debugging and troubleshooting"
    ]
  },
  {
    "objectID": "doc/utils/manifest.html",
    "href": "doc/utils/manifest.html",
    "title": "The manifest",
    "section": "",
    "text": "One might generate a schema in the examples/sentinel_cages directory as follows:\n% fisdat sentinel_cages_site.yaml Sentinel_cage_station_info_6.csv  my_manifest.yaml\n% fisdat sentinel_cages_sampling.yaml sentinel_cages_cleaned.csv  my_manifest.yaml\n% fisup my_manifest.yaml\n\n\n\n\n\nIf you’ve had a look at the generated manifest files, you may have noticed that it generates an example/empty job when the utility first creates the manifest file (additional example jobs aren’t appended to the file when appending more data). In YAML, the example/empty job has the following form:\njobs:\n- atomic_name: job_example_sentinel_cages_cleaned\n  job_type:    ignore\n  title:       Empty job template for sentinel_cages_cleaned\nThe design of this section is not specific to any job. The data model does not know anything about the structure of a job, or what it runs. All it knows about is the following attributes:\n\natomic_name: This is an identifier for the job description. Recall that an ‘atom’ is a text string with no spaces, underscores are the only valid control characters. It must be unique, indeed, it gets transformed into the identifier for the job (a URI) in RDF/TTL.\njob_type: This is the “type” of the job and the data model has a notion of valid jobs. At the moment, these are “ignore” and “density”.\ntitle: A free-text title of the job. Keep it relatively short like the title field in the YAML schemata. Longer descriptions should go in the description field.\n\n\n\n\nThere are several other fields supported here:\n\ndescription: Longer free-text description of the job. Both this and title are a key part of the feedback at the end of the pipeline, and will be included in the generated results (web pages).\njob_scope_descriptive: A list of column mappings to bring into scope, the provenance of which is notionally that they describe data about the world (e.g. latitude, longitude, data sampling notes).\njob_scope_collected: A list of column mappings to bring into scope, the provenance of which is notionally that they describe data which has been collected, or sampled, from the environment.\njob_scope_modelled: A list of column mappings to bring into scope, the provenance of which is notionally that they describe data which has been mod, or simulated.\n\nColumn mappings to bring into scope for the job are specified in the same way for each type, with the following fields necessary: 1. column: The verbatim column name in the table/data file in question, e.g. TOTAL 2. table: The name of the table object (specifically, the atomic_name field) in the manifest file which contains the column, e.g. sampling. It is likely that when comparing data, the source columns are included in different files. 3. variable: The underlying variable in the SAVED data model, e.g. saved:lice_af_total. Making sure that this is the variable which the job in question is able to process is important, as it is how subsequent processing of the job proper is able to identify the variable to which the column actually refers.\nIn effect, what we are doing here is columns to data files, and to an underlying variable in the data model, which we have ostensibly agreed describes something across models. This lets us run jobs on generic data with arbitrary column names, which reflects quite well what we encounter in practice, particularly when sharing data. The neat thing about this approach is it really emerges naturally from the notion that we should link variables in data files to variables in the data model.\n\n\n\natomic_name: RootManifest\ntables:\n- atomic_name: time_density_simple\n  resource_path: density.csv\n  resource_hash: 1974c2dbefaeaaa425a789142e405f7b8074bb96348b24003fe36bf4098e6b58e2227680bcf72634c4553b214f33acb4\n  schema_path_yaml: density.yaml\n  title: placeholder time/density description\n  description: ''\n- atomic_name: sampling\n  resource_path: cagedata-10.csv\n  resource_hash: 338279e44840d693ce184ef672c430c8cf0d26bc4ca4ca968429f0b3b472685f5410d78ab808b102f1f37148020b4d0c\n  schema_path_yaml: sentinel_cages_sampling.yaml\n  title: Sentinel cages sampling information schema\n  description: ''\njobs:\n- atomic_name: job_example_time_density_simple\n  job_type: density\n  title: Example job time_density_simple\n  job_scope_collected:\n    - column: TOTAL\n      table:  sampling\n      variable: saved:lice_af_total\n  job_scope_modelled:\n    - column: time\n      table: time_density_simple\n      variable: saved:time\n    - column: density\n      table: time_density_simple\n      variable: saved:lice_density_modelled\nlocal_version: 0.5\nThe manifest itself has an atomic_name identifier. This is by default RootManifest, and you should change this. What does this mean in practice?\n\nRecall that when writing schema files for our data, we had to declare a prefix to be used for the schema.\nWhen serialising manifests as RDF/TTL (with the --manifest-format ttl option in fisdat(1), and/or during the conversion upon upload), there is a so-called ‘base’ prefix which uses these identifiers. This is by default https://marine.gov.scot/metadata/saved/rap/.\nCurrently, there isn’t a check on whether the expanded identifier, based on this atomic_name attribute and the ‘base’ prefix (the default would thus be https://marine.gov.scot/metadata/saved/rap/RootManifest) is already in use, but there could be in the future.\nMaking the name of the serialised manifest, unique then, involves either changing the ‘base’ prefix to something else (e.g. https://marine.gov.scot/metadata/saved/rap/job_20240627/, using the --base-prefix &lt;some_prefix&gt; CLI option), varying the name of the manifest in this file (e.g. to Manifest20240627), or some combination of the two.\nSince the aim is to link data together, including results, it’s worth thinking about this carefully. Varying the ‘base’ prefix is desirable in the sense that not everyone is Marine Scotland, so would have a different place to eventually put generated results.\n\nOther things to consider:\n\nThe tables and jobs sections are lists. Note the dash before the start of a new element in the list, where indentation indicates that these list items are part of the same block.\nIn general, do not edit the tables section, since these are created by the fisdat(1) tool, and upload/subsequent job processing may fail if this section is invalid. In both these lists, what makes elements unique is the atomic_name identifier.\nThere is a single job declared here, but more than one job could be requested in a single manifest file. Whether to create multiple manifests for multiple jobs may depend on the cost of uploading data, which may be large.\n\n\n\n\n\nBy default, the fisdat(1) tool appends to manifest files in the YAML format, and the fisup(1) program, prior to upload, converts these to RDF/TTL upon upload. It is possible, using the --manifest-format (-f for short) option, to instead specify “ttl” as the format, each time one runs fisdat(1). When using this option, and using it with fisup(1), the conversion upon upload is to YAML, so that both formats are available to whatever does the subsequent processing.\nThere is a further option to debug the conversion between YAML and the equivalent RDF/TTL representation of the manifest, which is the fisjob(1) program. This takes a manifest file in RDF/TTL, and converts it to YAML (using the from-manifest option) or takes a manifest file in YAML, and converts it (using the from-template option). This largely serves to convert the manifest itself, whereas running fisup(1) with the --no-upload option largely performs the same thing, albeit also converts the schema files from LinkML YAML schema files to RDF/TTL.\nFor the schema files, these are also in YAML format, but they are standalone schema files using the LinkML data model, whereas the manifest files are data files processed by LinkML. The conversion from the fields in the YAML data files to an RDF graph is more or less 1:1. In contrast, the RDF/TTL equivalent of the LinkML schema files are very complicated, using identifiers from a number of ontologies / data models (such as FOAF, SKOS and Dublin Core). Therefore, there is no way to write an RDF/TTL equivalent of these LinkML YAML schema files by hand, even if the RDF/TTL equivalent is largely readable. Therefore, schema files are always in YAML format and are converted to RDF/TTL by fisup(1) alone, and the fisjob(1) program does not touch these.\nThe command line interface is largely similar for all three tools, e.g. the fisjob(1) program still requires a ‘base’ prefix (with the same default https://marine.gov.scot/metadata/saved/rap/ as default)",
    "crumbs": [
      "Fish data utilities",
      "The manifest"
    ]
  },
  {
    "objectID": "doc/utils/manifest.html#outline",
    "href": "doc/utils/manifest.html#outline",
    "title": "The manifest",
    "section": "",
    "text": "One might generate a schema in the examples/sentinel_cages directory as follows:\n% fisdat sentinel_cages_site.yaml Sentinel_cage_station_info_6.csv  my_manifest.yaml\n% fisdat sentinel_cages_sampling.yaml sentinel_cages_cleaned.csv  my_manifest.yaml\n% fisup my_manifest.yaml",
    "crumbs": [
      "Fish data utilities",
      "The manifest"
    ]
  },
  {
    "objectID": "doc/utils/manifest.html#declaring-jobs",
    "href": "doc/utils/manifest.html#declaring-jobs",
    "title": "The manifest",
    "section": "",
    "text": "If you’ve had a look at the generated manifest files, you may have noticed that it generates an example/empty job when the utility first creates the manifest file (additional example jobs aren’t appended to the file when appending more data). In YAML, the example/empty job has the following form:\njobs:\n- atomic_name: job_example_sentinel_cages_cleaned\n  job_type:    ignore\n  title:       Empty job template for sentinel_cages_cleaned\nThe design of this section is not specific to any job. The data model does not know anything about the structure of a job, or what it runs. All it knows about is the following attributes:\n\natomic_name: This is an identifier for the job description. Recall that an ‘atom’ is a text string with no spaces, underscores are the only valid control characters. It must be unique, indeed, it gets transformed into the identifier for the job (a URI) in RDF/TTL.\njob_type: This is the “type” of the job and the data model has a notion of valid jobs. At the moment, these are “ignore” and “density”.\ntitle: A free-text title of the job. Keep it relatively short like the title field in the YAML schemata. Longer descriptions should go in the description field.\n\n\n\n\nThere are several other fields supported here:\n\ndescription: Longer free-text description of the job. Both this and title are a key part of the feedback at the end of the pipeline, and will be included in the generated results (web pages).\njob_scope_descriptive: A list of column mappings to bring into scope, the provenance of which is notionally that they describe data about the world (e.g. latitude, longitude, data sampling notes).\njob_scope_collected: A list of column mappings to bring into scope, the provenance of which is notionally that they describe data which has been collected, or sampled, from the environment.\njob_scope_modelled: A list of column mappings to bring into scope, the provenance of which is notionally that they describe data which has been mod, or simulated.\n\nColumn mappings to bring into scope for the job are specified in the same way for each type, with the following fields necessary: 1. column: The verbatim column name in the table/data file in question, e.g. TOTAL 2. table: The name of the table object (specifically, the atomic_name field) in the manifest file which contains the column, e.g. sampling. It is likely that when comparing data, the source columns are included in different files. 3. variable: The underlying variable in the SAVED data model, e.g. saved:lice_af_total. Making sure that this is the variable which the job in question is able to process is important, as it is how subsequent processing of the job proper is able to identify the variable to which the column actually refers.\nIn effect, what we are doing here is columns to data files, and to an underlying variable in the data model, which we have ostensibly agreed describes something across models. This lets us run jobs on generic data with arbitrary column names, which reflects quite well what we encounter in practice, particularly when sharing data. The neat thing about this approach is it really emerges naturally from the notion that we should link variables in data files to variables in the data model.\n\n\n\natomic_name: RootManifest\ntables:\n- atomic_name: time_density_simple\n  resource_path: density.csv\n  resource_hash: 1974c2dbefaeaaa425a789142e405f7b8074bb96348b24003fe36bf4098e6b58e2227680bcf72634c4553b214f33acb4\n  schema_path_yaml: density.yaml\n  title: placeholder time/density description\n  description: ''\n- atomic_name: sampling\n  resource_path: cagedata-10.csv\n  resource_hash: 338279e44840d693ce184ef672c430c8cf0d26bc4ca4ca968429f0b3b472685f5410d78ab808b102f1f37148020b4d0c\n  schema_path_yaml: sentinel_cages_sampling.yaml\n  title: Sentinel cages sampling information schema\n  description: ''\njobs:\n- atomic_name: job_example_time_density_simple\n  job_type: density\n  title: Example job time_density_simple\n  job_scope_collected:\n    - column: TOTAL\n      table:  sampling\n      variable: saved:lice_af_total\n  job_scope_modelled:\n    - column: time\n      table: time_density_simple\n      variable: saved:time\n    - column: density\n      table: time_density_simple\n      variable: saved:lice_density_modelled\nlocal_version: 0.5\nThe manifest itself has an atomic_name identifier. This is by default RootManifest, and you should change this. What does this mean in practice?\n\nRecall that when writing schema files for our data, we had to declare a prefix to be used for the schema.\nWhen serialising manifests as RDF/TTL (with the --manifest-format ttl option in fisdat(1), and/or during the conversion upon upload), there is a so-called ‘base’ prefix which uses these identifiers. This is by default https://marine.gov.scot/metadata/saved/rap/.\nCurrently, there isn’t a check on whether the expanded identifier, based on this atomic_name attribute and the ‘base’ prefix (the default would thus be https://marine.gov.scot/metadata/saved/rap/RootManifest) is already in use, but there could be in the future.\nMaking the name of the serialised manifest, unique then, involves either changing the ‘base’ prefix to something else (e.g. https://marine.gov.scot/metadata/saved/rap/job_20240627/, using the --base-prefix &lt;some_prefix&gt; CLI option), varying the name of the manifest in this file (e.g. to Manifest20240627), or some combination of the two.\nSince the aim is to link data together, including results, it’s worth thinking about this carefully. Varying the ‘base’ prefix is desirable in the sense that not everyone is Marine Scotland, so would have a different place to eventually put generated results.\n\nOther things to consider:\n\nThe tables and jobs sections are lists. Note the dash before the start of a new element in the list, where indentation indicates that these list items are part of the same block.\nIn general, do not edit the tables section, since these are created by the fisdat(1) tool, and upload/subsequent job processing may fail if this section is invalid. In both these lists, what makes elements unique is the atomic_name identifier.\nThere is a single job declared here, but more than one job could be requested in a single manifest file. Whether to create multiple manifests for multiple jobs may depend on the cost of uploading data, which may be large.",
    "crumbs": [
      "Fish data utilities",
      "The manifest"
    ]
  },
  {
    "objectID": "doc/utils/manifest.html#yaml-vs-rdfttl",
    "href": "doc/utils/manifest.html#yaml-vs-rdfttl",
    "title": "The manifest",
    "section": "",
    "text": "By default, the fisdat(1) tool appends to manifest files in the YAML format, and the fisup(1) program, prior to upload, converts these to RDF/TTL upon upload. It is possible, using the --manifest-format (-f for short) option, to instead specify “ttl” as the format, each time one runs fisdat(1). When using this option, and using it with fisup(1), the conversion upon upload is to YAML, so that both formats are available to whatever does the subsequent processing.\nThere is a further option to debug the conversion between YAML and the equivalent RDF/TTL representation of the manifest, which is the fisjob(1) program. This takes a manifest file in RDF/TTL, and converts it to YAML (using the from-manifest option) or takes a manifest file in YAML, and converts it (using the from-template option). This largely serves to convert the manifest itself, whereas running fisup(1) with the --no-upload option largely performs the same thing, albeit also converts the schema files from LinkML YAML schema files to RDF/TTL.\nFor the schema files, these are also in YAML format, but they are standalone schema files using the LinkML data model, whereas the manifest files are data files processed by LinkML. The conversion from the fields in the YAML data files to an RDF graph is more or less 1:1. In contrast, the RDF/TTL equivalent of the LinkML schema files are very complicated, using identifiers from a number of ontologies / data models (such as FOAF, SKOS and Dublin Core). Therefore, there is no way to write an RDF/TTL equivalent of these LinkML YAML schema files by hand, even if the RDF/TTL equivalent is largely readable. Therefore, schema files are always in YAML format and are converted to RDF/TTL by fisup(1) alone, and the fisjob(1) program does not touch these.\nThe command line interface is largely similar for all three tools, e.g. the fisjob(1) program still requires a ‘base’ prefix (with the same default https://marine.gov.scot/metadata/saved/rap/ as default)",
    "crumbs": [
      "Fish data utilities",
      "The manifest"
    ]
  },
  {
    "objectID": "doc/misc/contributing.html",
    "href": "doc/misc/contributing.html",
    "title": "Contributing documentation",
    "section": "",
    "text": "Contributing documentation"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Documentation for SAVED",
    "section": "",
    "text": "saved_fisdat\n\n\n\n\n\n\n\n\nsaved_rap"
  },
  {
    "objectID": "index.html#the-fish-data-utilities",
    "href": "index.html#the-fish-data-utilities",
    "title": "Documentation for SAVED",
    "section": "",
    "text": "saved_fisdat"
  },
  {
    "objectID": "index.html#rap-service",
    "href": "index.html#rap-service",
    "title": "Documentation for SAVED",
    "section": "",
    "text": "saved_rap"
  },
  {
    "objectID": "schema/column_descriptive.html",
    "href": "schema/column_descriptive.html",
    "title": "Slot: column_descriptive",
    "section": "",
    "text": "Column describes data about the world\nURI: saved:column_descriptive\n\n\n\ncolumn_descriptive\n\nnorthing\neasting\nnational_grid_reference\nlatitude\nlongitude\nglobal_coordinate_system\ndepth\nseries\nnotes\nsite_name\nsite_id\ncage_id\n\n\n\n\n\n\nRange: NONE\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: column_descriptive\ndescription: Column describes data about the world\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: column_descriptive"
  },
  {
    "objectID": "schema/column_descriptive.html#inheritance",
    "href": "schema/column_descriptive.html#inheritance",
    "title": "Slot: column_descriptive",
    "section": "",
    "text": "column_descriptive\n\nnorthing\neasting\nnational_grid_reference\nlatitude\nlongitude\nglobal_coordinate_system\ndepth\nseries\nnotes\nsite_name\nsite_id\ncage_id"
  },
  {
    "objectID": "schema/column_descriptive.html#properties",
    "href": "schema/column_descriptive.html#properties",
    "title": "Slot: column_descriptive",
    "section": "",
    "text": "Range: NONE"
  },
  {
    "objectID": "schema/column_descriptive.html#identifier-and-mapping-information",
    "href": "schema/column_descriptive.html#identifier-and-mapping-information",
    "title": "Slot: column_descriptive",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/column_descriptive.html#linkml-source",
    "href": "schema/column_descriptive.html#linkml-source",
    "title": "Slot: column_descriptive",
    "section": "",
    "text": "name: column_descriptive\ndescription: Column describes data about the world\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: column_descriptive"
  },
  {
    "objectID": "schema/Curie.html",
    "href": "schema/Curie.html",
    "title": "Type: Curie",
    "section": "",
    "text": "a compact URI\nURI: xsd:string\n\nbase: Curie\nuri: xsd:string\nrepr: str\n\n\n\n\nin RDF serializations this MUST be expanded to a URI\nin non-RDF serializations MAY be serialized as the compact representation\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Curie.html#comments",
    "href": "schema/Curie.html#comments",
    "title": "Type: Curie",
    "section": "",
    "text": "in RDF serializations this MUST be expanded to a URI\nin non-RDF serializations MAY be serialized as the compact representation"
  },
  {
    "objectID": "schema/Curie.html#identifier-and-mapping-information",
    "href": "schema/Curie.html#identifier-and-mapping-information",
    "title": "Type: Curie",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/lice_density_modelled.html",
    "href": "schema/lice_density_modelled.html",
    "title": "Slot: lice_density_modelled",
    "section": "",
    "text": "Modelled lice density (lice per m³)\nURI: saved:lice_density_modelled\n\n\n\ncolumn_modelled\n\nlice_density_modelled\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: lice_density_modelled\ndescription: Modelled lice density (lice per m³)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:lice_density_collected\nrank: 1000\nis_a: column_modelled\nalias: lice_density_modelled\nrange: float"
  },
  {
    "objectID": "schema/lice_density_modelled.html#inheritance",
    "href": "schema/lice_density_modelled.html#inheritance",
    "title": "Slot: lice_density_modelled",
    "section": "",
    "text": "column_modelled\n\nlice_density_modelled"
  },
  {
    "objectID": "schema/lice_density_modelled.html#properties",
    "href": "schema/lice_density_modelled.html#properties",
    "title": "Slot: lice_density_modelled",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/lice_density_modelled.html#identifier-and-mapping-information",
    "href": "schema/lice_density_modelled.html#identifier-and-mapping-information",
    "title": "Slot: lice_density_modelled",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/lice_density_modelled.html#linkml-source",
    "href": "schema/lice_density_modelled.html#linkml-source",
    "title": "Slot: lice_density_modelled",
    "section": "",
    "text": "name: lice_density_modelled\ndescription: Modelled lice density (lice per m³)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:lice_density_collected\nrank: 1000\nis_a: column_modelled\nalias: lice_density_modelled\nrange: float"
  },
  {
    "objectID": "schema/Ncname.html",
    "href": "schema/Ncname.html",
    "title": "Type: Ncname",
    "section": "",
    "text": "Prefix part of CURIE\nURI: xsd:string\n\nbase: NCName\nuri: xsd:string\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Ncname.html#identifier-and-mapping-information",
    "href": "schema/Ncname.html#identifier-and-mapping-information",
    "title": "Type: Ncname",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/resource_hash.html",
    "href": "schema/resource_hash.html",
    "title": "Slot: resource_hash",
    "section": "",
    "text": "Checksum of resource\nURI: saved:resource_hash\n\n\n\nhash\n\nresource_hash\n\n\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\n\n\n\n\n\nRange: String\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: resource_hash\ndescription: Checksum of resource\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: hash\nalias: resource_hash\ndomain_of:\n- TableDesc\nrange: string\nrequired: true"
  },
  {
    "objectID": "schema/resource_hash.html#inheritance",
    "href": "schema/resource_hash.html#inheritance",
    "title": "Slot: resource_hash",
    "section": "",
    "text": "hash\n\nresource_hash"
  },
  {
    "objectID": "schema/resource_hash.html#applicable-classes",
    "href": "schema/resource_hash.html#applicable-classes",
    "title": "Slot: resource_hash",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno"
  },
  {
    "objectID": "schema/resource_hash.html#properties",
    "href": "schema/resource_hash.html#properties",
    "title": "Slot: resource_hash",
    "section": "",
    "text": "Range: String\nRequired: True"
  },
  {
    "objectID": "schema/resource_hash.html#identifier-and-mapping-information",
    "href": "schema/resource_hash.html#identifier-and-mapping-information",
    "title": "Slot: resource_hash",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/resource_hash.html#linkml-source",
    "href": "schema/resource_hash.html#linkml-source",
    "title": "Slot: resource_hash",
    "section": "",
    "text": "name: resource_hash\ndescription: Checksum of resource\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: hash\nalias: resource_hash\ndomain_of:\n- TableDesc\nrange: string\nrequired: true"
  },
  {
    "objectID": "schema/count_fish_collected.html",
    "href": "schema/count_fish_collected.html",
    "title": "Slot: count_fish_collected",
    "section": "",
    "text": "Sampled number of fish in the farm\nURI: saved:count_fish_collected\n\n\n\ncolumn_collected\n\ncount_fish_collected\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: count_fish_collected\ndescription: Sampled number of fish in the farm\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:count_fish_interpolated\nrank: 1000\nis_a: column_collected\nalias: count_fish_collected\nrange: float"
  },
  {
    "objectID": "schema/count_fish_collected.html#inheritance",
    "href": "schema/count_fish_collected.html#inheritance",
    "title": "Slot: count_fish_collected",
    "section": "",
    "text": "column_collected\n\ncount_fish_collected"
  },
  {
    "objectID": "schema/count_fish_collected.html#properties",
    "href": "schema/count_fish_collected.html#properties",
    "title": "Slot: count_fish_collected",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/count_fish_collected.html#identifier-and-mapping-information",
    "href": "schema/count_fish_collected.html#identifier-and-mapping-information",
    "title": "Slot: count_fish_collected",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/count_fish_collected.html#linkml-source",
    "href": "schema/count_fish_collected.html#linkml-source",
    "title": "Slot: count_fish_collected",
    "section": "",
    "text": "name: count_fish_collected\ndescription: Sampled number of fish in the farm\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:count_fish_interpolated\nrank: 1000\nis_a: column_collected\nalias: count_fish_collected\nrange: float"
  },
  {
    "objectID": "schema/notes.html",
    "href": "schema/notes.html",
    "title": "Slot: notes",
    "section": "",
    "text": "Notes pertinent to observation, a set of observations, or a data-set\nURI: saved:notes\n\n\n\ncolumn_descriptive\n\nnotes\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: notes\ndescription: Notes pertinent to observation, a set of observations, or a data-set\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:provenance\nrank: 1000\nis_a: column_descriptive\nalias: notes\nrange: string"
  },
  {
    "objectID": "schema/notes.html#inheritance",
    "href": "schema/notes.html#inheritance",
    "title": "Slot: notes",
    "section": "",
    "text": "column_descriptive\n\nnotes"
  },
  {
    "objectID": "schema/notes.html#properties",
    "href": "schema/notes.html#properties",
    "title": "Slot: notes",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/notes.html#identifier-and-mapping-information",
    "href": "schema/notes.html#identifier-and-mapping-information",
    "title": "Slot: notes",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/notes.html#linkml-source",
    "href": "schema/notes.html#linkml-source",
    "title": "Slot: notes",
    "section": "",
    "text": "name: notes\ndescription: Notes pertinent to observation, a set of observations, or a data-set\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:provenance\nrank: 1000\nis_a: column_descriptive\nalias: notes\nrange: string"
  },
  {
    "objectID": "schema/Sparqlpath.html",
    "href": "schema/Sparqlpath.html",
    "title": "Type: Sparqlpath",
    "section": "",
    "text": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.\nURI: xsd:string\n\nbase: str\nuri: xsd:string\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Sparqlpath.html#identifier-and-mapping-information",
    "href": "schema/Sparqlpath.html#identifier-and-mapping-information",
    "title": "Type: Sparqlpath",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/gcp_source.html",
    "href": "schema/gcp_source.html",
    "title": "Slot: gcp_source",
    "section": "",
    "text": "GCP account of the generator of the manifest\nURI: saved:gcp_source\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno\n\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: gcp_source\ndescription: GCP account of the generator of the manifest\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: gcp_source\ndomain_of:\n- ManifestDesc\nrange: string\nrequired: false"
  },
  {
    "objectID": "schema/gcp_source.html#applicable-classes",
    "href": "schema/gcp_source.html#applicable-classes",
    "title": "Slot: gcp_source",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno"
  },
  {
    "objectID": "schema/gcp_source.html#properties",
    "href": "schema/gcp_source.html#properties",
    "title": "Slot: gcp_source",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/gcp_source.html#identifier-and-mapping-information",
    "href": "schema/gcp_source.html#identifier-and-mapping-information",
    "title": "Slot: gcp_source",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/gcp_source.html#linkml-source",
    "href": "schema/gcp_source.html#linkml-source",
    "title": "Slot: gcp_source",
    "section": "",
    "text": "name: gcp_source\ndescription: GCP account of the generator of the manifest\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: gcp_source\ndomain_of:\n- ManifestDesc\nrange: string\nrequired: false"
  },
  {
    "objectID": "schema/TableDesc.html",
    "href": "schema/TableDesc.html",
    "title": "Class: TableDesc",
    "section": "",
    "text": "Manifest: data source descriptive attributes\nURI: saved:TableDesc\n classDiagram\n    class TableDesc\n    click TableDesc href \"../TableDesc\"\n      TableDesc : atomic_name\n        \n      TableDesc : description\n        \n      TableDesc : resource_hash\n        \n      TableDesc : resource_path\n        \n      TableDesc : schema_path_ttl\n        \n      TableDesc : schema_path_yaml\n        \n      TableDesc : title\n        \n      \n\n\n\n\n\n\nName\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect\n\n\ntitle\n0..1  String\nConcise human-readable name for the element\ndirect\n\n\ndescription\n0..1  String\nHuman-readable description of the element\ndirect\n\n\nresource_path\n1  Uri\nPath or URI of resource\ndirect\n\n\nresource_hash\n1  String\nChecksum of resource\ndirect\n\n\nschema_path_yaml\n1  Uri\nPath or URI of schema associated with resource (LinkML YAML)\ndirect\n\n\nschema_path_ttl\n0..1  Uri\nPath of URI of schema associated with resource (RDF/TTL conversion of LinkML …\ndirect\n\n\n\n\n\n\n\n\n\nused by\nused in\ntype\nused\n\n\n\n\nScopeDesc\ntable\nrange\nTableDesc\n\n\nManifestDesc\ntables\nrange\nTableDesc\n\n\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\n\n\nMapping Type\nMapped Value\n\n\n\n\nself\nsaved:TableDesc\n\n\nnative\nsaved:TableDesc\n\n\n\n\n\n\n\n\n\n\nname: TableDesc\ndescription: 'Manifest: data source descriptive attributes'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n- title\n- description\n- resource_path\n- resource_hash\n- schema_path_yaml\n- schema_path_ttl\n\n\n\n\n\nname: TableDesc\ndescription: 'Manifest: data source descriptive attributes'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$\n  title:\n    name: title\n    description: Concise human-readable name for the element\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    slot_uri: dcterms:title\n    alias: title\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    - JobDesc\n    range: string\n  description:\n    name: description\n    description: Human-readable description of the element\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: string\n  resource_path:\n    name: resource_path\n    description: Path or URI of resource\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: path\n    alias: resource_path\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: uri\n    required: true\n  resource_hash:\n    name: resource_hash\n    description: Checksum of resource\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: hash\n    alias: resource_hash\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: string\n    required: true\n  schema_path_yaml:\n    name: schema_path_yaml\n    description: Path or URI of schema associated with resource (LinkML YAML)\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: path\n    alias: schema_path_yaml\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: uri\n    required: true\n  schema_path_ttl:\n    name: schema_path_ttl\n    description: Path of URI of schema associated with resource (RDF/TTL conversion\n      of LinkML YAML)\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: path\n    alias: schema_path_ttl\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: uri\n    required: false"
  },
  {
    "objectID": "schema/TableDesc.html#slots",
    "href": "schema/TableDesc.html#slots",
    "title": "Class: TableDesc",
    "section": "",
    "text": "Name\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect\n\n\ntitle\n0..1  String\nConcise human-readable name for the element\ndirect\n\n\ndescription\n0..1  String\nHuman-readable description of the element\ndirect\n\n\nresource_path\n1  Uri\nPath or URI of resource\ndirect\n\n\nresource_hash\n1  String\nChecksum of resource\ndirect\n\n\nschema_path_yaml\n1  Uri\nPath or URI of schema associated with resource (LinkML YAML)\ndirect\n\n\nschema_path_ttl\n0..1  Uri\nPath of URI of schema associated with resource (RDF/TTL conversion of LinkML …\ndirect"
  },
  {
    "objectID": "schema/TableDesc.html#usages",
    "href": "schema/TableDesc.html#usages",
    "title": "Class: TableDesc",
    "section": "",
    "text": "used by\nused in\ntype\nused\n\n\n\n\nScopeDesc\ntable\nrange\nTableDesc\n\n\nManifestDesc\ntables\nrange\nTableDesc"
  },
  {
    "objectID": "schema/TableDesc.html#identifier-and-mapping-information",
    "href": "schema/TableDesc.html#identifier-and-mapping-information",
    "title": "Class: TableDesc",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/TableDesc.html#mappings",
    "href": "schema/TableDesc.html#mappings",
    "title": "Class: TableDesc",
    "section": "",
    "text": "Mapping Type\nMapped Value\n\n\n\n\nself\nsaved:TableDesc\n\n\nnative\nsaved:TableDesc"
  },
  {
    "objectID": "schema/TableDesc.html#linkml-source",
    "href": "schema/TableDesc.html#linkml-source",
    "title": "Class: TableDesc",
    "section": "",
    "text": "name: TableDesc\ndescription: 'Manifest: data source descriptive attributes'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n- title\n- description\n- resource_path\n- resource_hash\n- schema_path_yaml\n- schema_path_ttl\n\n\n\n\n\nname: TableDesc\ndescription: 'Manifest: data source descriptive attributes'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$\n  title:\n    name: title\n    description: Concise human-readable name for the element\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    slot_uri: dcterms:title\n    alias: title\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    - JobDesc\n    range: string\n  description:\n    name: description\n    description: Human-readable description of the element\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: string\n  resource_path:\n    name: resource_path\n    description: Path or URI of resource\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: path\n    alias: resource_path\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: uri\n    required: true\n  resource_hash:\n    name: resource_hash\n    description: Checksum of resource\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: hash\n    alias: resource_hash\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: string\n    required: true\n  schema_path_yaml:\n    name: schema_path_yaml\n    description: Path or URI of schema associated with resource (LinkML YAML)\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: path\n    alias: schema_path_yaml\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: uri\n    required: true\n  schema_path_ttl:\n    name: schema_path_ttl\n    description: Path of URI of schema associated with resource (RDF/TTL conversion\n      of LinkML YAML)\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: path\n    alias: schema_path_ttl\n    owner: TableDesc\n    domain_of:\n    - TableDesc\n    range: uri\n    required: false"
  },
  {
    "objectID": "schema/fish_species_common.html",
    "href": "schema/fish_species_common.html",
    "title": "Slot: fish_species_common",
    "section": "",
    "text": "Common name of species sampled\nURI: saved:fish_species_common\n\n\n\ncolumn_collected\n\nfish_species_common\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: fish_species_common\ndescription: Common name of species sampled\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nbroad_mappings:\n- saved:fish_species_scientific\nrank: 1000\nis_a: column_collected\nalias: fish_species_common\nrange: string"
  },
  {
    "objectID": "schema/fish_species_common.html#inheritance",
    "href": "schema/fish_species_common.html#inheritance",
    "title": "Slot: fish_species_common",
    "section": "",
    "text": "column_collected\n\nfish_species_common"
  },
  {
    "objectID": "schema/fish_species_common.html#properties",
    "href": "schema/fish_species_common.html#properties",
    "title": "Slot: fish_species_common",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/fish_species_common.html#identifier-and-mapping-information",
    "href": "schema/fish_species_common.html#identifier-and-mapping-information",
    "title": "Slot: fish_species_common",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/fish_species_common.html#linkml-source",
    "href": "schema/fish_species_common.html#linkml-source",
    "title": "Slot: fish_species_common",
    "section": "",
    "text": "name: fish_species_common\ndescription: Common name of species sampled\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nbroad_mappings:\n- saved:fish_species_scientific\nrank: 1000\nis_a: column_collected\nalias: fish_species_common\nrange: string"
  },
  {
    "objectID": "schema/ManifestDesc.html",
    "href": "schema/ManifestDesc.html",
    "title": "Class: ManifestDesc",
    "section": "",
    "text": "Manifest: job invocation specification\nURI: saved:ManifestDesc\n classDiagram\n    class ManifestDesc\n    click ManifestDesc href \"../ManifestDesc\"\n      ManifestDesc : atomic_name\n        \n      ManifestDesc : gcp_source\n        \n      ManifestDesc : jobs\n        \n          \n    \n    \n    ManifestDesc --&gt; \"1..*\" JobDesc : jobs\n    click JobDesc href \"../JobDesc\"\n\n        \n      ManifestDesc : local_version\n        \n      ManifestDesc : tables\n        \n          \n    \n    \n    ManifestDesc --&gt; \"1..*\" TableDesc : tables\n    click TableDesc href \"../TableDesc\"\n\n        \n      \n\n\n\n\n\n\nName\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect\n\n\ntables\n1..*  TableDesc\nSpecification of mappings between resources and schemas, as well as columns o…\ndirect\n\n\njobs\n1..*  JobDesc\nSpecification of operations to run on resources and schemas provided\ndirect\n\n\ngcp_source\n0..1  String\nGCP account of the generator of the manifest\ndirect\n\n\nlocal_version\n0..1  String\nVersion number of local submission utility\ndirect\n\n\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\n\n\nMapping Type\nMapped Value\n\n\n\n\nself\nsaved:ManifestDesc\n\n\nnative\nsaved:ManifestDesc\n\n\n\n\n\n\n\n\n\n\nname: ManifestDesc\ndescription: 'Manifest: job invocation specification'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n- tables\n- jobs\n- gcp_source\n- local_version\n\n\n\n\n\nname: ManifestDesc\ndescription: 'Manifest: job invocation specification'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: ManifestDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$\n  tables:\n    name: tables\n    description: Specification of mappings between resources and schemas, as well\n      as columns or dimensions to bring into into scope\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: true\n    alias: tables\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: TableDesc\n    required: true\n    inlined: true\n    inlined_as_list: true\n  jobs:\n    name: jobs\n    description: Specification of operations to run on resources and schemas provided\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: true\n    alias: jobs\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: JobDesc\n    required: true\n    inlined: true\n    inlined_as_list: true\n  gcp_source:\n    name: gcp_source\n    description: GCP account of the generator of the manifest\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    alias: gcp_source\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: string\n    required: false\n  local_version:\n    name: local_version\n    description: Version number of local submission utility\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    narrow_mappings:\n    - pav:version\n    rank: 1000\n    alias: local_version\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: string\n    required: false"
  },
  {
    "objectID": "schema/ManifestDesc.html#slots",
    "href": "schema/ManifestDesc.html#slots",
    "title": "Class: ManifestDesc",
    "section": "",
    "text": "Name\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect\n\n\ntables\n1..*  TableDesc\nSpecification of mappings between resources and schemas, as well as columns o…\ndirect\n\n\njobs\n1..*  JobDesc\nSpecification of operations to run on resources and schemas provided\ndirect\n\n\ngcp_source\n0..1  String\nGCP account of the generator of the manifest\ndirect\n\n\nlocal_version\n0..1  String\nVersion number of local submission utility\ndirect"
  },
  {
    "objectID": "schema/ManifestDesc.html#identifier-and-mapping-information",
    "href": "schema/ManifestDesc.html#identifier-and-mapping-information",
    "title": "Class: ManifestDesc",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/ManifestDesc.html#mappings",
    "href": "schema/ManifestDesc.html#mappings",
    "title": "Class: ManifestDesc",
    "section": "",
    "text": "Mapping Type\nMapped Value\n\n\n\n\nself\nsaved:ManifestDesc\n\n\nnative\nsaved:ManifestDesc"
  },
  {
    "objectID": "schema/ManifestDesc.html#linkml-source",
    "href": "schema/ManifestDesc.html#linkml-source",
    "title": "Class: ManifestDesc",
    "section": "",
    "text": "name: ManifestDesc\ndescription: 'Manifest: job invocation specification'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n- tables\n- jobs\n- gcp_source\n- local_version\n\n\n\n\n\nname: ManifestDesc\ndescription: 'Manifest: job invocation specification'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: ManifestDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$\n  tables:\n    name: tables\n    description: Specification of mappings between resources and schemas, as well\n      as columns or dimensions to bring into into scope\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: true\n    alias: tables\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: TableDesc\n    required: true\n    inlined: true\n    inlined_as_list: true\n  jobs:\n    name: jobs\n    description: Specification of operations to run on resources and schemas provided\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: true\n    alias: jobs\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: JobDesc\n    required: true\n    inlined: true\n    inlined_as_list: true\n  gcp_source:\n    name: gcp_source\n    description: GCP account of the generator of the manifest\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    alias: gcp_source\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: string\n    required: false\n  local_version:\n    name: local_version\n    description: Version number of local submission utility\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    narrow_mappings:\n    - pav:version\n    rank: 1000\n    alias: local_version\n    owner: ManifestDesc\n    domain_of:\n    - ManifestDesc\n    range: string\n    required: false"
  },
  {
    "objectID": "schema/JobDesc.html",
    "href": "schema/JobDesc.html",
    "title": "Class: JobDesc",
    "section": "",
    "text": "Manifest: job specification attributes which specific job sub-classes inherit\nURI: saved:JobDesc\n classDiagram\n    class JobDesc\n    click JobDesc href \"../JobDesc\"\n      JobDesc : atomic_name\n        \n      JobDesc : job_scope_collected\n        \n          \n    \n    \n    JobDesc --&gt; \"*\" ScopeDesc : job_scope_collected\n    click ScopeDesc href \"../ScopeDesc\"\n\n        \n      JobDesc : job_scope_descriptive\n        \n          \n    \n    \n    JobDesc --&gt; \"*\" ScopeDesc : job_scope_descriptive\n    click ScopeDesc href \"../ScopeDesc\"\n\n        \n      JobDesc : job_scope_modelled\n        \n          \n    \n    \n    JobDesc --&gt; \"*\" ScopeDesc : job_scope_modelled\n    click ScopeDesc href \"../ScopeDesc\"\n\n        \n      JobDesc : job_type\n        \n          \n    \n    \n    JobDesc --&gt; \"1\" JobType : job_type\n    click JobType href \"../JobType\"\n\n        \n      JobDesc : title\n        \n      \n\n\n\n\n\n\nName\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect\n\n\ntitle\n0..1  String\nConcise human-readable name for the element\ndirect\n\n\njob_type\n1  JobType\nWhile this is analogous to Dublin Core’s notion of type, it is specific to jo…\ndirect\n\n\njob_scope_descriptive\n*  ScopeDesc\nA collection of column descriptions which describe something about the world\ndirect\n\n\njob_scope_collected\n*  ScopeDesc\nA collection of column descriptions which are collected or sampled\ndirect\n\n\njob_scope_modelled\n*  ScopeDesc\nA collection of column descriptions which are modelled or simulated\ndirect\n\n\n\n\n\n\n\n\n\nused by\nused in\ntype\nused\n\n\n\n\nManifestDesc\njobs\nrange\nJobDesc\n\n\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\n\n\nMapping Type\nMapped Value\n\n\n\n\nself\nsaved:JobDesc\n\n\nnative\nsaved:JobDesc\n\n\n\n\n\n\n\n\n\n\nname: JobDesc\ndescription: 'Manifest: job specification attributes which specific job sub-classes\n  inherit'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n- title\n- job_type\n- job_scope_descriptive\n- job_scope_collected\n- job_scope_modelled\n\n\n\n\n\nname: JobDesc\ndescription: 'Manifest: job specification attributes which specific job sub-classes\n  inherit'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: JobDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$\n  title:\n    name: title\n    description: Concise human-readable name for the element\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    slot_uri: dcterms:title\n    alias: title\n    owner: JobDesc\n    domain_of:\n    - TableDesc\n    - JobDesc\n    range: string\n  job_type:\n    name: job_type\n    description: While this is analogous to Dublin Core's notion of type, it is specific\n      to jobs proper, because there is a well-defined range of the jobs we know about.\n      Undefined job types cannot be processed.\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    broad_mappings:\n    - saved:type\n    rank: 1000\n    alias: job_type\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: JobType\n    required: true\n  job_scope_descriptive:\n    name: job_scope_descriptive\n    description: A collection of column descriptions which describe something about\n      the world\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: job_scope\n    multivalued: true\n    alias: job_scope_descriptive\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: ScopeDesc\n    inlined: true\n    inlined_as_list: true\n  job_scope_collected:\n    name: job_scope_collected\n    description: A collection of column descriptions which are collected or sampled\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: job_scope\n    multivalued: true\n    alias: job_scope_collected\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: ScopeDesc\n    inlined: true\n    inlined_as_list: true\n  job_scope_modelled:\n    name: job_scope_modelled\n    description: A collection of column descriptions which are modelled or simulated\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: job_scope\n    multivalued: true\n    alias: job_scope_modelled\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: ScopeDesc\n    inlined: true\n    inlined_as_list: true"
  },
  {
    "objectID": "schema/JobDesc.html#slots",
    "href": "schema/JobDesc.html#slots",
    "title": "Class: JobDesc",
    "section": "",
    "text": "Name\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect\n\n\ntitle\n0..1  String\nConcise human-readable name for the element\ndirect\n\n\njob_type\n1  JobType\nWhile this is analogous to Dublin Core’s notion of type, it is specific to jo…\ndirect\n\n\njob_scope_descriptive\n*  ScopeDesc\nA collection of column descriptions which describe something about the world\ndirect\n\n\njob_scope_collected\n*  ScopeDesc\nA collection of column descriptions which are collected or sampled\ndirect\n\n\njob_scope_modelled\n*  ScopeDesc\nA collection of column descriptions which are modelled or simulated\ndirect"
  },
  {
    "objectID": "schema/JobDesc.html#usages",
    "href": "schema/JobDesc.html#usages",
    "title": "Class: JobDesc",
    "section": "",
    "text": "used by\nused in\ntype\nused\n\n\n\n\nManifestDesc\njobs\nrange\nJobDesc"
  },
  {
    "objectID": "schema/JobDesc.html#identifier-and-mapping-information",
    "href": "schema/JobDesc.html#identifier-and-mapping-information",
    "title": "Class: JobDesc",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/JobDesc.html#mappings",
    "href": "schema/JobDesc.html#mappings",
    "title": "Class: JobDesc",
    "section": "",
    "text": "Mapping Type\nMapped Value\n\n\n\n\nself\nsaved:JobDesc\n\n\nnative\nsaved:JobDesc"
  },
  {
    "objectID": "schema/JobDesc.html#linkml-source",
    "href": "schema/JobDesc.html#linkml-source",
    "title": "Class: JobDesc",
    "section": "",
    "text": "name: JobDesc\ndescription: 'Manifest: job specification attributes which specific job sub-classes\n  inherit'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n- title\n- job_type\n- job_scope_descriptive\n- job_scope_collected\n- job_scope_modelled\n\n\n\n\n\nname: JobDesc\ndescription: 'Manifest: job specification attributes which specific job sub-classes\n  inherit'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: JobDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$\n  title:\n    name: title\n    description: Concise human-readable name for the element\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    slot_uri: dcterms:title\n    alias: title\n    owner: JobDesc\n    domain_of:\n    - TableDesc\n    - JobDesc\n    range: string\n  job_type:\n    name: job_type\n    description: While this is analogous to Dublin Core's notion of type, it is specific\n      to jobs proper, because there is a well-defined range of the jobs we know about.\n      Undefined job types cannot be processed.\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    broad_mappings:\n    - saved:type\n    rank: 1000\n    alias: job_type\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: JobType\n    required: true\n  job_scope_descriptive:\n    name: job_scope_descriptive\n    description: A collection of column descriptions which describe something about\n      the world\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: job_scope\n    multivalued: true\n    alias: job_scope_descriptive\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: ScopeDesc\n    inlined: true\n    inlined_as_list: true\n  job_scope_collected:\n    name: job_scope_collected\n    description: A collection of column descriptions which are collected or sampled\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: job_scope\n    multivalued: true\n    alias: job_scope_collected\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: ScopeDesc\n    inlined: true\n    inlined_as_list: true\n  job_scope_modelled:\n    name: job_scope_modelled\n    description: A collection of column descriptions which are modelled or simulated\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    is_a: job_scope\n    multivalued: true\n    alias: job_scope_modelled\n    owner: JobDesc\n    domain_of:\n    - JobDesc\n    range: ScopeDesc\n    inlined: true\n    inlined_as_list: true"
  },
  {
    "objectID": "schema/Time.html",
    "href": "schema/Time.html",
    "title": "Type: Time",
    "section": "",
    "text": "A time object represents a (local) time of day, independent of any particular day\nURI: xsd:time\n\nbase: XSDTime\nuri: xsd:time\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Time.html#identifier-and-mapping-information",
    "href": "schema/Time.html#identifier-and-mapping-information",
    "title": "Type: Time",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/index.html",
    "href": "schema/index.html",
    "title": "SAVED meta-model",
    "section": "",
    "text": "URI: https://marine.gov.scot/metadata/saved/schema/meta/\nName: meta\n\n\n\n\n\nClass\nDescription\n\n\n\n\nExtColumnDesc\nCatch-all external column description\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\n\n\nManifestDesc\nManifest: job invocation specification\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpinning the column\n\n\nTableDesc\nManifest: data source descriptive attributes\n\n\n\n\n\n\n\n\n\nSlot\nDescription\n\n\n\n\natomic_name\nShort-form name / atom: lower-case, no special characters excepting underscor…\n\n\ncage_id\nSemi-numeric cage identifier, related to station/site\n\n\ncolumn\nColumn name in table\n\n\ncolumn_collected\nColumn describes collected data\n\n\ncolumn_descriptive\nColumn describes data about the world\n\n\ncolumn_modelled\nColumn describes modelled data\n\n\ncount_fish_collected\nSampled number of fish in the farm\n\n\ncount_fish_interpolated\nInterpolated number of fish in the farm\n\n\ndepth\nDepth in metres\n\n\ndescription\nHuman-readable description of the element\n\n\neasting\n‘Y’-positional data relative to point of origin\n\n\nfish_length\nLength of fish expressed (mm)\n\n\nfish_mass\nWeight of fish expressed (g)\n\n\nfish_species_common\nCommon name of species sampled\n\n\nfish_species_scientific\nScientific name of species sampled\n\n\ngcp_source\nGCP account of the generator of the manifest\n\n\nglobal_coordinate_system\nGlobal coordinate system (GCS) reference point of origin\n\n\nhash\nChecksum of some file\n\n\njob_scope\nA collection of column descriptions\n\n\njob_scope_collected\nA collection of column descriptions which are collected or sampled\n\n\njob_scope_descriptive\nA collection of column descriptions which describe something about the world\n\n\njob_scope_modelled\nA collection of column descriptions which are modelled or simulated\n\n\njob_type\nWhile this is analogous to Dublin Core’s notion of type, it is specific to jo…\n\n\njobs\nSpecification of operations to run on resources and schemas provided\n\n\nlatitude\nLatitude\n\n\nlice_af_average\nAverage number of Salmon lice (adult female) per fish\n\n\nlice_af_total\nTotal number of Salmon lice per fish\n\n\nlice_density_collected\nSampled lice density (lice per m³)\n\n\nlice_density_modelled\nModelled lice density (lice per m³)\n\n\nlocal_version\nVersion number of local submission utility\n\n\nlongitude\nLongitude\n\n\nnational_grid_reference\nNational grid reference (NGR) point of origin\n\n\nnorthing\n‘X’-positional data relative to point of origin\n\n\nnotes\nNotes pertinent to observation, a set of observations, or a data-set\n\n\npath\nPath or URI\n\n\nprovenance\nProvenance of an element, or a set of elements\n\n\nresource_hash\nChecksum of resource\n\n\nresource_path\nPath or URI of resource\n\n\nschema_path_ttl\nPath of URI of schema associated with resource (RDF/TTL conversion of LinkML …\n\n\nschema_path_yaml\nPath or URI of schema associated with resource (LinkML YAML)\n\n\nseries\nData series to which a given observation belongs\n\n\nsite_id\nFish farm station/site global ID\n\n\nsite_name\nFish farm station/site local name\n\n\ntable\nTable description from which column is drawn, specifically matching the `atom…\n\n\ntables\nSpecification of mappings between resources and schemas, as well as columns o…\n\n\ntitle\nConcise human-readable name for the element\n\n\ntype\nNature or genre of the element\n\n\nvariable\nName of variable underpinning column, specific to the job, used for pattern-m…\n\n\n\n\n\n\n\n\n\nEnumeration\nDescription\n\n\n\n\nJobType\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\nBoolean\nA binary (true or false) value\n\n\nCurie\na compact URI\n\n\nDate\na date (year, month and day) in an idealized calendar\n\n\nDateOrDatetime\nEither a date or a datetime\n\n\nDatetime\nThe combination of a date and time\n\n\nDecimal\nA real number with arbitrary precision that conforms to the xsd:decimal speci…\n\n\nDouble\nA real number that conforms to the xsd:double specification\n\n\nFloat\nA real number that conforms to the xsd:float specification\n\n\nInteger\nAn integer\n\n\nJsonpath\nA string encoding a JSON Path\n\n\nJsonpointer\nA string encoding a JSON Pointer\n\n\nLatLonType\n\n\n\nNcname\nPrefix part of CURIE\n\n\nNodeidentifier\nA URI, CURIE or BNODE that represents a node in a model\n\n\nObjectidentifier\nA URI or CURIE that represents an object in the model\n\n\nSparqlpath\nA string encoding a SPARQL Property Path\n\n\nString\nA character string\n\n\nTime\nA time object represents a (local) time of day, independent of any particular…\n\n\nUri\na complete URI\n\n\nUriorcurie\na URI or a CURIE\n\n\n\n\n\n\n\n\n\nSubset\nDescription"
  },
  {
    "objectID": "schema/index.html#classes",
    "href": "schema/index.html#classes",
    "title": "SAVED meta-model",
    "section": "",
    "text": "Class\nDescription\n\n\n\n\nExtColumnDesc\nCatch-all external column description\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\n\n\nManifestDesc\nManifest: job invocation specification\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpinning the column\n\n\nTableDesc\nManifest: data source descriptive attributes"
  },
  {
    "objectID": "schema/index.html#slots",
    "href": "schema/index.html#slots",
    "title": "SAVED meta-model",
    "section": "",
    "text": "Slot\nDescription\n\n\n\n\natomic_name\nShort-form name / atom: lower-case, no special characters excepting underscor…\n\n\ncage_id\nSemi-numeric cage identifier, related to station/site\n\n\ncolumn\nColumn name in table\n\n\ncolumn_collected\nColumn describes collected data\n\n\ncolumn_descriptive\nColumn describes data about the world\n\n\ncolumn_modelled\nColumn describes modelled data\n\n\ncount_fish_collected\nSampled number of fish in the farm\n\n\ncount_fish_interpolated\nInterpolated number of fish in the farm\n\n\ndepth\nDepth in metres\n\n\ndescription\nHuman-readable description of the element\n\n\neasting\n‘Y’-positional data relative to point of origin\n\n\nfish_length\nLength of fish expressed (mm)\n\n\nfish_mass\nWeight of fish expressed (g)\n\n\nfish_species_common\nCommon name of species sampled\n\n\nfish_species_scientific\nScientific name of species sampled\n\n\ngcp_source\nGCP account of the generator of the manifest\n\n\nglobal_coordinate_system\nGlobal coordinate system (GCS) reference point of origin\n\n\nhash\nChecksum of some file\n\n\njob_scope\nA collection of column descriptions\n\n\njob_scope_collected\nA collection of column descriptions which are collected or sampled\n\n\njob_scope_descriptive\nA collection of column descriptions which describe something about the world\n\n\njob_scope_modelled\nA collection of column descriptions which are modelled or simulated\n\n\njob_type\nWhile this is analogous to Dublin Core’s notion of type, it is specific to jo…\n\n\njobs\nSpecification of operations to run on resources and schemas provided\n\n\nlatitude\nLatitude\n\n\nlice_af_average\nAverage number of Salmon lice (adult female) per fish\n\n\nlice_af_total\nTotal number of Salmon lice per fish\n\n\nlice_density_collected\nSampled lice density (lice per m³)\n\n\nlice_density_modelled\nModelled lice density (lice per m³)\n\n\nlocal_version\nVersion number of local submission utility\n\n\nlongitude\nLongitude\n\n\nnational_grid_reference\nNational grid reference (NGR) point of origin\n\n\nnorthing\n‘X’-positional data relative to point of origin\n\n\nnotes\nNotes pertinent to observation, a set of observations, or a data-set\n\n\npath\nPath or URI\n\n\nprovenance\nProvenance of an element, or a set of elements\n\n\nresource_hash\nChecksum of resource\n\n\nresource_path\nPath or URI of resource\n\n\nschema_path_ttl\nPath of URI of schema associated with resource (RDF/TTL conversion of LinkML …\n\n\nschema_path_yaml\nPath or URI of schema associated with resource (LinkML YAML)\n\n\nseries\nData series to which a given observation belongs\n\n\nsite_id\nFish farm station/site global ID\n\n\nsite_name\nFish farm station/site local name\n\n\ntable\nTable description from which column is drawn, specifically matching the `atom…\n\n\ntables\nSpecification of mappings between resources and schemas, as well as columns o…\n\n\ntitle\nConcise human-readable name for the element\n\n\ntype\nNature or genre of the element\n\n\nvariable\nName of variable underpinning column, specific to the job, used for pattern-m…"
  },
  {
    "objectID": "schema/index.html#enumerations",
    "href": "schema/index.html#enumerations",
    "title": "SAVED meta-model",
    "section": "",
    "text": "Enumeration\nDescription\n\n\n\n\nJobType"
  },
  {
    "objectID": "schema/index.html#types",
    "href": "schema/index.html#types",
    "title": "SAVED meta-model",
    "section": "",
    "text": "Type\nDescription\n\n\n\n\nBoolean\nA binary (true or false) value\n\n\nCurie\na compact URI\n\n\nDate\na date (year, month and day) in an idealized calendar\n\n\nDateOrDatetime\nEither a date or a datetime\n\n\nDatetime\nThe combination of a date and time\n\n\nDecimal\nA real number with arbitrary precision that conforms to the xsd:decimal speci…\n\n\nDouble\nA real number that conforms to the xsd:double specification\n\n\nFloat\nA real number that conforms to the xsd:float specification\n\n\nInteger\nAn integer\n\n\nJsonpath\nA string encoding a JSON Path\n\n\nJsonpointer\nA string encoding a JSON Pointer\n\n\nLatLonType\n\n\n\nNcname\nPrefix part of CURIE\n\n\nNodeidentifier\nA URI, CURIE or BNODE that represents a node in a model\n\n\nObjectidentifier\nA URI or CURIE that represents an object in the model\n\n\nSparqlpath\nA string encoding a SPARQL Property Path\n\n\nString\nA character string\n\n\nTime\nA time object represents a (local) time of day, independent of any particular…\n\n\nUri\na complete URI\n\n\nUriorcurie\na URI or a CURIE"
  },
  {
    "objectID": "schema/index.html#subsets",
    "href": "schema/index.html#subsets",
    "title": "SAVED meta-model",
    "section": "",
    "text": "Subset\nDescription"
  },
  {
    "objectID": "schema/Nodeidentifier.html",
    "href": "schema/Nodeidentifier.html",
    "title": "Type: Nodeidentifier",
    "section": "",
    "text": "A URI, CURIE or BNODE that represents a node in a model.\nURI: shex:nonLiteral\n\nbase: NodeIdentifier\nuri: shex:nonLiteral\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Nodeidentifier.html#identifier-and-mapping-information",
    "href": "schema/Nodeidentifier.html#identifier-and-mapping-information",
    "title": "Type: Nodeidentifier",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/column_collected.html",
    "href": "schema/column_collected.html",
    "title": "Slot: column_collected",
    "section": "",
    "text": "Column describes collected data\nURI: saved:column_collected\n\n\n\ncolumn_collected\n\ncount_fish_collected\nfish_length\nfish_mass\nfish_species_common\nfish_species_scientific\nlice_af_average\nlice_af_total\nlice_density_collected\n\n\n\n\n\n\nRange: NONE\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: column_collected\ndescription: Column describes collected data\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: column_collected"
  },
  {
    "objectID": "schema/column_collected.html#inheritance",
    "href": "schema/column_collected.html#inheritance",
    "title": "Slot: column_collected",
    "section": "",
    "text": "column_collected\n\ncount_fish_collected\nfish_length\nfish_mass\nfish_species_common\nfish_species_scientific\nlice_af_average\nlice_af_total\nlice_density_collected"
  },
  {
    "objectID": "schema/column_collected.html#properties",
    "href": "schema/column_collected.html#properties",
    "title": "Slot: column_collected",
    "section": "",
    "text": "Range: NONE"
  },
  {
    "objectID": "schema/column_collected.html#identifier-and-mapping-information",
    "href": "schema/column_collected.html#identifier-and-mapping-information",
    "title": "Slot: column_collected",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/column_collected.html#linkml-source",
    "href": "schema/column_collected.html#linkml-source",
    "title": "Slot: column_collected",
    "section": "",
    "text": "name: column_collected\ndescription: Column describes collected data\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: column_collected"
  },
  {
    "objectID": "schema/DateOrDatetime.html",
    "href": "schema/DateOrDatetime.html",
    "title": "Type: DateOrDatetime",
    "section": "",
    "text": "Either a date or a datetime\nURI: linkml:DateOrDatetime\n\nbase: str\nuri: linkml:DateOrDatetime\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/DateOrDatetime.html#identifier-and-mapping-information",
    "href": "schema/DateOrDatetime.html#identifier-and-mapping-information",
    "title": "Type: DateOrDatetime",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/count_fish_interpolated.html",
    "href": "schema/count_fish_interpolated.html",
    "title": "Slot: count_fish_interpolated",
    "section": "",
    "text": "Interpolated number of fish in the farm\nURI: saved:count_fish_interpolated\n\n\n\ncolumn_modelled\n\ncount_fish_interpolated\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: count_fish_interpolated\ndescription: Interpolated number of fish in the farm\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:count_fish_collected\nrank: 1000\nis_a: column_modelled\nalias: count_fish_interpolated\nrange: float"
  },
  {
    "objectID": "schema/count_fish_interpolated.html#inheritance",
    "href": "schema/count_fish_interpolated.html#inheritance",
    "title": "Slot: count_fish_interpolated",
    "section": "",
    "text": "column_modelled\n\ncount_fish_interpolated"
  },
  {
    "objectID": "schema/count_fish_interpolated.html#properties",
    "href": "schema/count_fish_interpolated.html#properties",
    "title": "Slot: count_fish_interpolated",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/count_fish_interpolated.html#identifier-and-mapping-information",
    "href": "schema/count_fish_interpolated.html#identifier-and-mapping-information",
    "title": "Slot: count_fish_interpolated",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/count_fish_interpolated.html#linkml-source",
    "href": "schema/count_fish_interpolated.html#linkml-source",
    "title": "Slot: count_fish_interpolated",
    "section": "",
    "text": "name: count_fish_interpolated\ndescription: Interpolated number of fish in the farm\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:count_fish_collected\nrank: 1000\nis_a: column_modelled\nalias: count_fish_interpolated\nrange: float"
  },
  {
    "objectID": "schema/schema_path_yaml.html",
    "href": "schema/schema_path_yaml.html",
    "title": "Slot: schema_path_yaml",
    "section": "",
    "text": "Path or URI of schema associated with resource (LinkML YAML)\nURI: saved:schema_path_yaml\n\n\n\npath\n\nschema_path_yaml\n\n\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\n\n\n\n\n\nRange: Uri\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: schema_path_yaml\ndescription: Path or URI of schema associated with resource (LinkML YAML)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: path\nalias: schema_path_yaml\ndomain_of:\n- TableDesc\nrange: uri\nrequired: true"
  },
  {
    "objectID": "schema/schema_path_yaml.html#inheritance",
    "href": "schema/schema_path_yaml.html#inheritance",
    "title": "Slot: schema_path_yaml",
    "section": "",
    "text": "path\n\nschema_path_yaml"
  },
  {
    "objectID": "schema/schema_path_yaml.html#applicable-classes",
    "href": "schema/schema_path_yaml.html#applicable-classes",
    "title": "Slot: schema_path_yaml",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno"
  },
  {
    "objectID": "schema/schema_path_yaml.html#properties",
    "href": "schema/schema_path_yaml.html#properties",
    "title": "Slot: schema_path_yaml",
    "section": "",
    "text": "Range: Uri\nRequired: True"
  },
  {
    "objectID": "schema/schema_path_yaml.html#identifier-and-mapping-information",
    "href": "schema/schema_path_yaml.html#identifier-and-mapping-information",
    "title": "Slot: schema_path_yaml",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/schema_path_yaml.html#linkml-source",
    "href": "schema/schema_path_yaml.html#linkml-source",
    "title": "Slot: schema_path_yaml",
    "section": "",
    "text": "name: schema_path_yaml\ndescription: Path or URI of schema associated with resource (LinkML YAML)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: path\nalias: schema_path_yaml\ndomain_of:\n- TableDesc\nrange: uri\nrequired: true"
  },
  {
    "objectID": "schema/ExtColumnDesc.html",
    "href": "schema/ExtColumnDesc.html",
    "title": "Class: ExtColumnDesc",
    "section": "",
    "text": "Catch-all external column description\nURI: saved:ExtColumnDesc\n classDiagram\n    class ExtColumnDesc\n    click ExtColumnDesc href \"../ExtColumnDesc\"\n      ExtColumnDesc : atomic_name\n        \n      \n\n\n\n\n\n\nName\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect\n\n\n\n\n\n\n\n\n\nused by\nused in\ntype\nused\n\n\n\n\nScopeDesc\nvariable\nrange\nExtColumnDesc\n\n\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\n\n\nMapping Type\nMapped Value\n\n\n\n\nself\nsaved:ExtColumnDesc\n\n\nnative\nsaved:ExtColumnDesc\n\n\n\n\n\n\n\n\n\n\nname: ExtColumnDesc\ndescription: Catch-all external column description\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n\n\n\n\n\nname: ExtColumnDesc\ndescription: Catch-all external column description\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: ExtColumnDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$"
  },
  {
    "objectID": "schema/ExtColumnDesc.html#slots",
    "href": "schema/ExtColumnDesc.html#slots",
    "title": "Class: ExtColumnDesc",
    "section": "",
    "text": "Name\nCardinality and Range\nDescription\nInheritance\n\n\n\n\natomic_name\n1  String\nShort-form name / atom: lower-case, no special characters excepting underscor…\ndirect"
  },
  {
    "objectID": "schema/ExtColumnDesc.html#usages",
    "href": "schema/ExtColumnDesc.html#usages",
    "title": "Class: ExtColumnDesc",
    "section": "",
    "text": "used by\nused in\ntype\nused\n\n\n\n\nScopeDesc\nvariable\nrange\nExtColumnDesc"
  },
  {
    "objectID": "schema/ExtColumnDesc.html#identifier-and-mapping-information",
    "href": "schema/ExtColumnDesc.html#identifier-and-mapping-information",
    "title": "Class: ExtColumnDesc",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/ExtColumnDesc.html#mappings",
    "href": "schema/ExtColumnDesc.html#mappings",
    "title": "Class: ExtColumnDesc",
    "section": "",
    "text": "Mapping Type\nMapped Value\n\n\n\n\nself\nsaved:ExtColumnDesc\n\n\nnative\nsaved:ExtColumnDesc"
  },
  {
    "objectID": "schema/ExtColumnDesc.html#linkml-source",
    "href": "schema/ExtColumnDesc.html#linkml-source",
    "title": "Class: ExtColumnDesc",
    "section": "",
    "text": "name: ExtColumnDesc\ndescription: Catch-all external column description\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- atomic_name\n\n\n\n\n\nname: ExtColumnDesc\ndescription: Catch-all external column description\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  atomic_name:\n    name: atomic_name\n    description: 'Short-form name / atom: lower-case, no special characters excepting\n      underscores'\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    exact_mappings:\n    - dc:identifier\n    broad_mappings:\n    - saved:name\n    - dc:title\n    rank: 1000\n    identifier: true\n    alias: atomic_name\n    owner: ExtColumnDesc\n    domain_of:\n    - TableDesc\n    - ExtColumnDesc\n    - JobDesc\n    - ManifestDesc\n    range: string\n    required: true\n    pattern: ^:?[a-z]+[[a-z]|_|]*$"
  },
  {
    "objectID": "schema/job_scope_collected.html",
    "href": "schema/job_scope_collected.html",
    "title": "Slot: job_scope_collected",
    "section": "",
    "text": "A collection of column descriptions which are collected or sampled\nURI: saved:job_scope_collected\n\n\n\njob_scope\n\njob_scope_collected\n\n\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno\n\n\n\n\n\n\n\nRange: ScopeDesc\nMultivalued: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: job_scope_collected\ndescription: A collection of column descriptions which are collected or sampled\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: job_scope\nmultivalued: true\nalias: job_scope_collected\ndomain_of:\n- JobDesc\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/job_scope_collected.html#inheritance",
    "href": "schema/job_scope_collected.html#inheritance",
    "title": "Slot: job_scope_collected",
    "section": "",
    "text": "job_scope\n\njob_scope_collected"
  },
  {
    "objectID": "schema/job_scope_collected.html#applicable-classes",
    "href": "schema/job_scope_collected.html#applicable-classes",
    "title": "Slot: job_scope_collected",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno"
  },
  {
    "objectID": "schema/job_scope_collected.html#properties",
    "href": "schema/job_scope_collected.html#properties",
    "title": "Slot: job_scope_collected",
    "section": "",
    "text": "Range: ScopeDesc\nMultivalued: True"
  },
  {
    "objectID": "schema/job_scope_collected.html#identifier-and-mapping-information",
    "href": "schema/job_scope_collected.html#identifier-and-mapping-information",
    "title": "Slot: job_scope_collected",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/job_scope_collected.html#linkml-source",
    "href": "schema/job_scope_collected.html#linkml-source",
    "title": "Slot: job_scope_collected",
    "section": "",
    "text": "name: job_scope_collected\ndescription: A collection of column descriptions which are collected or sampled\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: job_scope\nmultivalued: true\nalias: job_scope_collected\ndomain_of:\n- JobDesc\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/fish_mass.html",
    "href": "schema/fish_mass.html",
    "title": "Slot: fish_mass",
    "section": "",
    "text": "Weight of fish expressed (g)\nURI: saved:fish_mass\n\n\n\ncolumn_collected\n\nfish_mass\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: fish_mass\ndescription: Weight of fish expressed (g)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: fish_mass\nrange: float"
  },
  {
    "objectID": "schema/fish_mass.html#inheritance",
    "href": "schema/fish_mass.html#inheritance",
    "title": "Slot: fish_mass",
    "section": "",
    "text": "column_collected\n\nfish_mass"
  },
  {
    "objectID": "schema/fish_mass.html#properties",
    "href": "schema/fish_mass.html#properties",
    "title": "Slot: fish_mass",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/fish_mass.html#identifier-and-mapping-information",
    "href": "schema/fish_mass.html#identifier-and-mapping-information",
    "title": "Slot: fish_mass",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/fish_mass.html#linkml-source",
    "href": "schema/fish_mass.html#linkml-source",
    "title": "Slot: fish_mass",
    "section": "",
    "text": "name: fish_mass\ndescription: Weight of fish expressed (g)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: fish_mass\nrange: float"
  },
  {
    "objectID": "schema/Double.html",
    "href": "schema/Double.html",
    "title": "Type: Double",
    "section": "",
    "text": "A real number that conforms to the xsd:double specification\nURI: xsd:double\n\nbase: float\nuri: xsd:double\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Double.html#identifier-and-mapping-information",
    "href": "schema/Double.html#identifier-and-mapping-information",
    "title": "Type: Double",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/column.html",
    "href": "schema/column.html",
    "title": "Slot: column",
    "section": "",
    "text": "Column name in table\nURI: saved:column\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpin…\nno\n\n\n\n\n\n\n\nRange: String\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: column\ndescription: Column name in table\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: false\nalias: column\ndomain_of:\n- ScopeDesc\nrange: string\nrequired: true"
  },
  {
    "objectID": "schema/column.html#applicable-classes",
    "href": "schema/column.html#applicable-classes",
    "title": "Slot: column",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpin…\nno"
  },
  {
    "objectID": "schema/column.html#properties",
    "href": "schema/column.html#properties",
    "title": "Slot: column",
    "section": "",
    "text": "Range: String\nRequired: True"
  },
  {
    "objectID": "schema/column.html#identifier-and-mapping-information",
    "href": "schema/column.html#identifier-and-mapping-information",
    "title": "Slot: column",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/column.html#linkml-source",
    "href": "schema/column.html#linkml-source",
    "title": "Slot: column",
    "section": "",
    "text": "name: column\ndescription: Column name in table\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: false\nalias: column\ndomain_of:\n- ScopeDesc\nrange: string\nrequired: true"
  },
  {
    "objectID": "schema/title.html",
    "href": "schema/title.html",
    "title": "Slot: title",
    "section": "",
    "text": "Concise human-readable name for the element\nURI: dcterms:title\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno\n\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: title\ndescription: Concise human-readable name for the element\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nslot_uri: dcterms:title\nalias: title\ndomain_of:\n- TableDesc\n- JobDesc\nrange: string"
  },
  {
    "objectID": "schema/title.html#applicable-classes",
    "href": "schema/title.html#applicable-classes",
    "title": "Slot: title",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno"
  },
  {
    "objectID": "schema/title.html#properties",
    "href": "schema/title.html#properties",
    "title": "Slot: title",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/title.html#identifier-and-mapping-information",
    "href": "schema/title.html#identifier-and-mapping-information",
    "title": "Slot: title",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/title.html#linkml-source",
    "href": "schema/title.html#linkml-source",
    "title": "Slot: title",
    "section": "",
    "text": "name: title\ndescription: Concise human-readable name for the element\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nslot_uri: dcterms:title\nalias: title\ndomain_of:\n- TableDesc\n- JobDesc\nrange: string"
  },
  {
    "objectID": "schema/path.html",
    "href": "schema/path.html",
    "title": "Slot: path",
    "section": "",
    "text": "Path or URI\nURI: saved:path\n\n\n\npath\n\nresource_path\nschema_path_yaml\nschema_path_ttl\n\n\n\n\n\n\nRange: Uri\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: path\ndescription: Path or URI\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nexact_mappings:\n- linkml:path\nrank: 1000\nalias: path\nrange: uri"
  },
  {
    "objectID": "schema/path.html#inheritance",
    "href": "schema/path.html#inheritance",
    "title": "Slot: path",
    "section": "",
    "text": "path\n\nresource_path\nschema_path_yaml\nschema_path_ttl"
  },
  {
    "objectID": "schema/path.html#properties",
    "href": "schema/path.html#properties",
    "title": "Slot: path",
    "section": "",
    "text": "Range: Uri"
  },
  {
    "objectID": "schema/path.html#identifier-and-mapping-information",
    "href": "schema/path.html#identifier-and-mapping-information",
    "title": "Slot: path",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/path.html#linkml-source",
    "href": "schema/path.html#linkml-source",
    "title": "Slot: path",
    "section": "",
    "text": "name: path\ndescription: Path or URI\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nexact_mappings:\n- linkml:path\nrank: 1000\nalias: path\nrange: uri"
  },
  {
    "objectID": "schema/Date.html",
    "href": "schema/Date.html",
    "title": "Type: Date",
    "section": "",
    "text": "a date (year, month and day) in an idealized calendar\nURI: xsd:date\n\nbase: XSDDate\nuri: xsd:date\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Date.html#identifier-and-mapping-information",
    "href": "schema/Date.html#identifier-and-mapping-information",
    "title": "Type: Date",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Jsonpath.html",
    "href": "schema/Jsonpath.html",
    "title": "Type: Jsonpath",
    "section": "",
    "text": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.\nURI: xsd:string\n\nbase: str\nuri: xsd:string\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Jsonpath.html#identifier-and-mapping-information",
    "href": "schema/Jsonpath.html#identifier-and-mapping-information",
    "title": "Type: Jsonpath",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/site_id.html",
    "href": "schema/site_id.html",
    "title": "Slot: site_id",
    "section": "",
    "text": "Fish farm station/site global ID\nURI: saved:site_id\n\n\n\ncolumn_descriptive\n\nsite_id\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: site_id\ndescription: Fish farm station/site global ID\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: site_id\nrange: string"
  },
  {
    "objectID": "schema/site_id.html#inheritance",
    "href": "schema/site_id.html#inheritance",
    "title": "Slot: site_id",
    "section": "",
    "text": "column_descriptive\n\nsite_id"
  },
  {
    "objectID": "schema/site_id.html#properties",
    "href": "schema/site_id.html#properties",
    "title": "Slot: site_id",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/site_id.html#identifier-and-mapping-information",
    "href": "schema/site_id.html#identifier-and-mapping-information",
    "title": "Slot: site_id",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/site_id.html#linkml-source",
    "href": "schema/site_id.html#linkml-source",
    "title": "Slot: site_id",
    "section": "",
    "text": "name: site_id\ndescription: Fish farm station/site global ID\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: site_id\nrange: string"
  },
  {
    "objectID": "schema/Integer.html",
    "href": "schema/Integer.html",
    "title": "Type: Integer",
    "section": "",
    "text": "An integer\nURI: xsd:integer\n\nbase: int\nuri: xsd:integer\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Integer.html#identifier-and-mapping-information",
    "href": "schema/Integer.html#identifier-and-mapping-information",
    "title": "Type: Integer",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/cage_id.html",
    "href": "schema/cage_id.html",
    "title": "Slot: cage_id",
    "section": "",
    "text": "Semi-numeric cage identifier, related to station/site\nURI: saved:cage_id\n\n\n\ncolumn_descriptive\n\ncage_id\n\n\n\n\n\n\nRange: NONE or String or Integer\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: cage_id\ndescription: Semi-numeric cage identifier, related to station/site\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: cage_id\nany_of:\n- range: string\n- range: integer"
  },
  {
    "objectID": "schema/cage_id.html#inheritance",
    "href": "schema/cage_id.html#inheritance",
    "title": "Slot: cage_id",
    "section": "",
    "text": "column_descriptive\n\ncage_id"
  },
  {
    "objectID": "schema/cage_id.html#properties",
    "href": "schema/cage_id.html#properties",
    "title": "Slot: cage_id",
    "section": "",
    "text": "Range: NONE or String or Integer"
  },
  {
    "objectID": "schema/cage_id.html#identifier-and-mapping-information",
    "href": "schema/cage_id.html#identifier-and-mapping-information",
    "title": "Slot: cage_id",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/cage_id.html#linkml-source",
    "href": "schema/cage_id.html#linkml-source",
    "title": "Slot: cage_id",
    "section": "",
    "text": "name: cage_id\ndescription: Semi-numeric cage identifier, related to station/site\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: cage_id\nany_of:\n- range: string\n- range: integer"
  },
  {
    "objectID": "schema/hash.html",
    "href": "schema/hash.html",
    "title": "Slot: hash",
    "section": "",
    "text": "Checksum of some file\nURI: saved:hash\n\n\n\nhash\n\nresource_hash\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: hash\ndescription: Checksum of some file\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nexact_mappings:\n- linkml:hash\nrank: 1000\nalias: hash\nrange: string"
  },
  {
    "objectID": "schema/hash.html#inheritance",
    "href": "schema/hash.html#inheritance",
    "title": "Slot: hash",
    "section": "",
    "text": "hash\n\nresource_hash"
  },
  {
    "objectID": "schema/hash.html#properties",
    "href": "schema/hash.html#properties",
    "title": "Slot: hash",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/hash.html#identifier-and-mapping-information",
    "href": "schema/hash.html#identifier-and-mapping-information",
    "title": "Slot: hash",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/hash.html#linkml-source",
    "href": "schema/hash.html#linkml-source",
    "title": "Slot: hash",
    "section": "",
    "text": "name: hash\ndescription: Checksum of some file\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nexact_mappings:\n- linkml:hash\nrank: 1000\nalias: hash\nrange: string"
  },
  {
    "objectID": "schema/jobs.html",
    "href": "schema/jobs.html",
    "title": "Slot: jobs",
    "section": "",
    "text": "Specification of operations to run on resources and schemas provided\nURI: saved:jobs\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno\n\n\n\n\n\n\n\nRange: JobDesc\nMultivalued: True\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: jobs\ndescription: Specification of operations to run on resources and schemas provided\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: true\nalias: jobs\ndomain_of:\n- ManifestDesc\nrange: JobDesc\nrequired: true\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/jobs.html#applicable-classes",
    "href": "schema/jobs.html#applicable-classes",
    "title": "Slot: jobs",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno"
  },
  {
    "objectID": "schema/jobs.html#properties",
    "href": "schema/jobs.html#properties",
    "title": "Slot: jobs",
    "section": "",
    "text": "Range: JobDesc\nMultivalued: True\nRequired: True"
  },
  {
    "objectID": "schema/jobs.html#identifier-and-mapping-information",
    "href": "schema/jobs.html#identifier-and-mapping-information",
    "title": "Slot: jobs",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/jobs.html#linkml-source",
    "href": "schema/jobs.html#linkml-source",
    "title": "Slot: jobs",
    "section": "",
    "text": "name: jobs\ndescription: Specification of operations to run on resources and schemas provided\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: true\nalias: jobs\ndomain_of:\n- ManifestDesc\nrange: JobDesc\nrequired: true\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/lice_af_average.html",
    "href": "schema/lice_af_average.html",
    "title": "Slot: lice_af_average",
    "section": "",
    "text": "Average number of Salmon lice (adult female) per fish\nURI: saved:lice_af_average\n\n\n\ncolumn_collected\n\nlice_af_average\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: lice_af_average\ndescription: Average number of Salmon lice (adult female) per fish\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: lice_af_average\nrange: float"
  },
  {
    "objectID": "schema/lice_af_average.html#inheritance",
    "href": "schema/lice_af_average.html#inheritance",
    "title": "Slot: lice_af_average",
    "section": "",
    "text": "column_collected\n\nlice_af_average"
  },
  {
    "objectID": "schema/lice_af_average.html#properties",
    "href": "schema/lice_af_average.html#properties",
    "title": "Slot: lice_af_average",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/lice_af_average.html#identifier-and-mapping-information",
    "href": "schema/lice_af_average.html#identifier-and-mapping-information",
    "title": "Slot: lice_af_average",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/lice_af_average.html#linkml-source",
    "href": "schema/lice_af_average.html#linkml-source",
    "title": "Slot: lice_af_average",
    "section": "",
    "text": "name: lice_af_average\ndescription: Average number of Salmon lice (adult female) per fish\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: lice_af_average\nrange: float"
  },
  {
    "objectID": "schema/Uri.html",
    "href": "schema/Uri.html",
    "title": "Type: Uri",
    "section": "",
    "text": "a complete URI\nURI: xsd:anyURI\n\nbase: URI\nuri: xsd:anyURI\nrepr: str\n\n\n\n\nin RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Uri.html#comments",
    "href": "schema/Uri.html#comments",
    "title": "Type: Uri",
    "section": "",
    "text": "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
  },
  {
    "objectID": "schema/Uri.html#identifier-and-mapping-information",
    "href": "schema/Uri.html#identifier-and-mapping-information",
    "title": "Type: Uri",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/job_type.html",
    "href": "schema/job_type.html",
    "title": "Slot: job_type",
    "section": "",
    "text": "While this is analogous to Dublin Core’s notion of type, it is specific to jobs proper, because there is a well-defined range of the jobs we know about. Undefined job types cannot be processed.\nURI: saved:job_type\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno\n\n\n\n\n\n\n\nRange: JobType\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: job_type\ndescription: While this is analogous to Dublin Core's notion of type, it is specific\n  to jobs proper, because there is a well-defined range of the jobs we know about.\n  Undefined job types cannot be processed.\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nbroad_mappings:\n- saved:type\nrank: 1000\nalias: job_type\ndomain_of:\n- JobDesc\nrange: JobType\nrequired: true"
  },
  {
    "objectID": "schema/job_type.html#applicable-classes",
    "href": "schema/job_type.html#applicable-classes",
    "title": "Slot: job_type",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno"
  },
  {
    "objectID": "schema/job_type.html#properties",
    "href": "schema/job_type.html#properties",
    "title": "Slot: job_type",
    "section": "",
    "text": "Range: JobType\nRequired: True"
  },
  {
    "objectID": "schema/job_type.html#identifier-and-mapping-information",
    "href": "schema/job_type.html#identifier-and-mapping-information",
    "title": "Slot: job_type",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/job_type.html#linkml-source",
    "href": "schema/job_type.html#linkml-source",
    "title": "Slot: job_type",
    "section": "",
    "text": "name: job_type\ndescription: While this is analogous to Dublin Core's notion of type, it is specific\n  to jobs proper, because there is a well-defined range of the jobs we know about.\n  Undefined job types cannot be processed.\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nbroad_mappings:\n- saved:type\nrank: 1000\nalias: job_type\ndomain_of:\n- JobDesc\nrange: JobType\nrequired: true"
  },
  {
    "objectID": "schema/Uriorcurie.html",
    "href": "schema/Uriorcurie.html",
    "title": "Type: Uriorcurie",
    "section": "",
    "text": "a URI or a CURIE\nURI: xsd:anyURI\n\nbase: URIorCURIE\nuri: xsd:anyURI\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Uriorcurie.html#identifier-and-mapping-information",
    "href": "schema/Uriorcurie.html#identifier-and-mapping-information",
    "title": "Type: Uriorcurie",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/depth.html",
    "href": "schema/depth.html",
    "title": "Slot: depth",
    "section": "",
    "text": "Depth in metres\nURI: saved:depth\n\n\n\ncolumn_descriptive\n\ndepth\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: depth\ndescription: Depth in metres\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: depth\nrange: float"
  },
  {
    "objectID": "schema/depth.html#inheritance",
    "href": "schema/depth.html#inheritance",
    "title": "Slot: depth",
    "section": "",
    "text": "column_descriptive\n\ndepth"
  },
  {
    "objectID": "schema/depth.html#properties",
    "href": "schema/depth.html#properties",
    "title": "Slot: depth",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/depth.html#identifier-and-mapping-information",
    "href": "schema/depth.html#identifier-and-mapping-information",
    "title": "Slot: depth",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/depth.html#linkml-source",
    "href": "schema/depth.html#linkml-source",
    "title": "Slot: depth",
    "section": "",
    "text": "name: depth\ndescription: Depth in metres\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: depth\nrange: float"
  },
  {
    "objectID": "schema/lice_density_collected.html",
    "href": "schema/lice_density_collected.html",
    "title": "Slot: lice_density_collected",
    "section": "",
    "text": "Sampled lice density (lice per m³)\nURI: saved:lice_density_collected\n\n\n\ncolumn_collected\n\nlice_density_collected\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: lice_density_collected\ndescription: Sampled lice density (lice per m³)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:lice_density_modelled\nrank: 1000\nis_a: column_collected\nalias: lice_density_collected\nrange: float"
  },
  {
    "objectID": "schema/lice_density_collected.html#inheritance",
    "href": "schema/lice_density_collected.html#inheritance",
    "title": "Slot: lice_density_collected",
    "section": "",
    "text": "column_collected\n\nlice_density_collected"
  },
  {
    "objectID": "schema/lice_density_collected.html#properties",
    "href": "schema/lice_density_collected.html#properties",
    "title": "Slot: lice_density_collected",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/lice_density_collected.html#identifier-and-mapping-information",
    "href": "schema/lice_density_collected.html#identifier-and-mapping-information",
    "title": "Slot: lice_density_collected",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/lice_density_collected.html#linkml-source",
    "href": "schema/lice_density_collected.html#linkml-source",
    "title": "Slot: lice_density_collected",
    "section": "",
    "text": "name: lice_density_collected\ndescription: Sampled lice density (lice per m³)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:lice_density_modelled\nrank: 1000\nis_a: column_collected\nalias: lice_density_collected\nrange: float"
  },
  {
    "objectID": "schema/tables.html",
    "href": "schema/tables.html",
    "title": "Slot: tables",
    "section": "",
    "text": "Specification of mappings between resources and schemas, as well as columns or dimensions to bring into into scope\nURI: saved:tables\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno\n\n\n\n\n\n\n\nRange: TableDesc\nMultivalued: True\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: tables\ndescription: Specification of mappings between resources and schemas, as well as columns\n  or dimensions to bring into into scope\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: true\nalias: tables\ndomain_of:\n- ManifestDesc\nrange: TableDesc\nrequired: true\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/tables.html#applicable-classes",
    "href": "schema/tables.html#applicable-classes",
    "title": "Slot: tables",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno"
  },
  {
    "objectID": "schema/tables.html#properties",
    "href": "schema/tables.html#properties",
    "title": "Slot: tables",
    "section": "",
    "text": "Range: TableDesc\nMultivalued: True\nRequired: True"
  },
  {
    "objectID": "schema/tables.html#identifier-and-mapping-information",
    "href": "schema/tables.html#identifier-and-mapping-information",
    "title": "Slot: tables",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/tables.html#linkml-source",
    "href": "schema/tables.html#linkml-source",
    "title": "Slot: tables",
    "section": "",
    "text": "name: tables\ndescription: Specification of mappings between resources and schemas, as well as columns\n  or dimensions to bring into into scope\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: true\nalias: tables\ndomain_of:\n- ManifestDesc\nrange: TableDesc\nrequired: true\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/longitude.html",
    "href": "schema/longitude.html",
    "title": "Slot: longitude",
    "section": "",
    "text": "Longitude\nURI: saved:longitude\n\n\n\ncolumn_descriptive\n\nlongitude\n\n\n\n\n\n\nRange: NONE or LatLonType or Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: longitude\ndescription: Longitude\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: longitude\nany_of:\n- range: LatLonType\n- range: float"
  },
  {
    "objectID": "schema/longitude.html#inheritance",
    "href": "schema/longitude.html#inheritance",
    "title": "Slot: longitude",
    "section": "",
    "text": "column_descriptive\n\nlongitude"
  },
  {
    "objectID": "schema/longitude.html#properties",
    "href": "schema/longitude.html#properties",
    "title": "Slot: longitude",
    "section": "",
    "text": "Range: NONE or LatLonType or Float"
  },
  {
    "objectID": "schema/longitude.html#identifier-and-mapping-information",
    "href": "schema/longitude.html#identifier-and-mapping-information",
    "title": "Slot: longitude",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/longitude.html#linkml-source",
    "href": "schema/longitude.html#linkml-source",
    "title": "Slot: longitude",
    "section": "",
    "text": "name: longitude\ndescription: Longitude\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: longitude\nany_of:\n- range: LatLonType\n- range: float"
  },
  {
    "objectID": "schema/variable.html",
    "href": "schema/variable.html",
    "title": "Slot: variable",
    "section": "",
    "text": "Name of variable underpinning column, specific to the job, used for pattern-matching\nURI: saved:variable\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpin…\nno\n\n\n\n\n\n\n\nRange: ExtColumnDesc\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: variable\ndescription: Name of variable underpinning column, specific to the job, used for pattern-matching\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: false\nalias: variable\ndomain_of:\n- ScopeDesc\nrange: ExtColumnDesc\nrequired: true"
  },
  {
    "objectID": "schema/variable.html#applicable-classes",
    "href": "schema/variable.html#applicable-classes",
    "title": "Slot: variable",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpin…\nno"
  },
  {
    "objectID": "schema/variable.html#properties",
    "href": "schema/variable.html#properties",
    "title": "Slot: variable",
    "section": "",
    "text": "Range: ExtColumnDesc\nRequired: True"
  },
  {
    "objectID": "schema/variable.html#identifier-and-mapping-information",
    "href": "schema/variable.html#identifier-and-mapping-information",
    "title": "Slot: variable",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/variable.html#linkml-source",
    "href": "schema/variable.html#linkml-source",
    "title": "Slot: variable",
    "section": "",
    "text": "name: variable\ndescription: Name of variable underpinning column, specific to the job, used for pattern-matching\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: false\nalias: variable\ndomain_of:\n- ScopeDesc\nrange: ExtColumnDesc\nrequired: true"
  },
  {
    "objectID": "schema/job_scope_modelled.html",
    "href": "schema/job_scope_modelled.html",
    "title": "Slot: job_scope_modelled",
    "section": "",
    "text": "A collection of column descriptions which are modelled or simulated\nURI: saved:job_scope_modelled\n\n\n\njob_scope\n\njob_scope_modelled\n\n\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno\n\n\n\n\n\n\n\nRange: ScopeDesc\nMultivalued: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: job_scope_modelled\ndescription: A collection of column descriptions which are modelled or simulated\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: job_scope\nmultivalued: true\nalias: job_scope_modelled\ndomain_of:\n- JobDesc\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/job_scope_modelled.html#inheritance",
    "href": "schema/job_scope_modelled.html#inheritance",
    "title": "Slot: job_scope_modelled",
    "section": "",
    "text": "job_scope\n\njob_scope_modelled"
  },
  {
    "objectID": "schema/job_scope_modelled.html#applicable-classes",
    "href": "schema/job_scope_modelled.html#applicable-classes",
    "title": "Slot: job_scope_modelled",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno"
  },
  {
    "objectID": "schema/job_scope_modelled.html#properties",
    "href": "schema/job_scope_modelled.html#properties",
    "title": "Slot: job_scope_modelled",
    "section": "",
    "text": "Range: ScopeDesc\nMultivalued: True"
  },
  {
    "objectID": "schema/job_scope_modelled.html#identifier-and-mapping-information",
    "href": "schema/job_scope_modelled.html#identifier-and-mapping-information",
    "title": "Slot: job_scope_modelled",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/job_scope_modelled.html#linkml-source",
    "href": "schema/job_scope_modelled.html#linkml-source",
    "title": "Slot: job_scope_modelled",
    "section": "",
    "text": "name: job_scope_modelled\ndescription: A collection of column descriptions which are modelled or simulated\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: job_scope\nmultivalued: true\nalias: job_scope_modelled\ndomain_of:\n- JobDesc\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/northing.html",
    "href": "schema/northing.html",
    "title": "Slot: northing",
    "section": "",
    "text": "‘X’-positional data relative to point of origin\nURI: saved:northing\n\n\n\ncolumn_descriptive\n\nnorthing\n\n\n\n\n\n\nRange: Integer\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: northing\ndescription: '''X''-positional data relative to point of origin'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: northing\nrange: integer"
  },
  {
    "objectID": "schema/northing.html#inheritance",
    "href": "schema/northing.html#inheritance",
    "title": "Slot: northing",
    "section": "",
    "text": "column_descriptive\n\nnorthing"
  },
  {
    "objectID": "schema/northing.html#properties",
    "href": "schema/northing.html#properties",
    "title": "Slot: northing",
    "section": "",
    "text": "Range: Integer"
  },
  {
    "objectID": "schema/northing.html#identifier-and-mapping-information",
    "href": "schema/northing.html#identifier-and-mapping-information",
    "title": "Slot: northing",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/northing.html#linkml-source",
    "href": "schema/northing.html#linkml-source",
    "title": "Slot: northing",
    "section": "",
    "text": "name: northing\ndescription: '''X''-positional data relative to point of origin'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: northing\nrange: integer"
  },
  {
    "objectID": "schema/job_scope_descriptive.html",
    "href": "schema/job_scope_descriptive.html",
    "title": "Slot: job_scope_descriptive",
    "section": "",
    "text": "A collection of column descriptions which describe something about the world\nURI: saved:job_scope_descriptive\n\n\n\njob_scope\n\njob_scope_descriptive\n\n\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno\n\n\n\n\n\n\n\nRange: ScopeDesc\nMultivalued: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: job_scope_descriptive\ndescription: A collection of column descriptions which describe something about the\n  world\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: job_scope\nmultivalued: true\nalias: job_scope_descriptive\ndomain_of:\n- JobDesc\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/job_scope_descriptive.html#inheritance",
    "href": "schema/job_scope_descriptive.html#inheritance",
    "title": "Slot: job_scope_descriptive",
    "section": "",
    "text": "job_scope\n\njob_scope_descriptive"
  },
  {
    "objectID": "schema/job_scope_descriptive.html#applicable-classes",
    "href": "schema/job_scope_descriptive.html#applicable-classes",
    "title": "Slot: job_scope_descriptive",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno"
  },
  {
    "objectID": "schema/job_scope_descriptive.html#properties",
    "href": "schema/job_scope_descriptive.html#properties",
    "title": "Slot: job_scope_descriptive",
    "section": "",
    "text": "Range: ScopeDesc\nMultivalued: True"
  },
  {
    "objectID": "schema/job_scope_descriptive.html#identifier-and-mapping-information",
    "href": "schema/job_scope_descriptive.html#identifier-and-mapping-information",
    "title": "Slot: job_scope_descriptive",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/job_scope_descriptive.html#linkml-source",
    "href": "schema/job_scope_descriptive.html#linkml-source",
    "title": "Slot: job_scope_descriptive",
    "section": "",
    "text": "name: job_scope_descriptive\ndescription: A collection of column descriptions which describe something about the\n  world\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: job_scope\nmultivalued: true\nalias: job_scope_descriptive\ndomain_of:\n- JobDesc\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/easting.html",
    "href": "schema/easting.html",
    "title": "Slot: easting",
    "section": "",
    "text": "‘Y’-positional data relative to point of origin\nURI: saved:easting\n\n\n\ncolumn_descriptive\n\neasting\n\n\n\n\n\n\nRange: Integer\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: easting\ndescription: '''Y''-positional data relative to point of origin'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: easting\nrange: integer"
  },
  {
    "objectID": "schema/easting.html#inheritance",
    "href": "schema/easting.html#inheritance",
    "title": "Slot: easting",
    "section": "",
    "text": "column_descriptive\n\neasting"
  },
  {
    "objectID": "schema/easting.html#properties",
    "href": "schema/easting.html#properties",
    "title": "Slot: easting",
    "section": "",
    "text": "Range: Integer"
  },
  {
    "objectID": "schema/easting.html#identifier-and-mapping-information",
    "href": "schema/easting.html#identifier-and-mapping-information",
    "title": "Slot: easting",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/easting.html#linkml-source",
    "href": "schema/easting.html#linkml-source",
    "title": "Slot: easting",
    "section": "",
    "text": "name: easting\ndescription: '''Y''-positional data relative to point of origin'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: easting\nrange: integer"
  },
  {
    "objectID": "schema/global_coordinate_system.html",
    "href": "schema/global_coordinate_system.html",
    "title": "Slot: global_coordinate_system",
    "section": "",
    "text": "Global coordinate system (GCS) reference point of origin\nURI: saved:global_coordinate_system\n\n\n\ncolumn_descriptive\n\nglobal_coordinate_system\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: global_coordinate_system\ndescription: Global coordinate system (GCS) reference point of origin\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: global_coordinate_system\nrange: string"
  },
  {
    "objectID": "schema/global_coordinate_system.html#inheritance",
    "href": "schema/global_coordinate_system.html#inheritance",
    "title": "Slot: global_coordinate_system",
    "section": "",
    "text": "column_descriptive\n\nglobal_coordinate_system"
  },
  {
    "objectID": "schema/global_coordinate_system.html#properties",
    "href": "schema/global_coordinate_system.html#properties",
    "title": "Slot: global_coordinate_system",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/global_coordinate_system.html#identifier-and-mapping-information",
    "href": "schema/global_coordinate_system.html#identifier-and-mapping-information",
    "title": "Slot: global_coordinate_system",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/global_coordinate_system.html#linkml-source",
    "href": "schema/global_coordinate_system.html#linkml-source",
    "title": "Slot: global_coordinate_system",
    "section": "",
    "text": "name: global_coordinate_system\ndescription: Global coordinate system (GCS) reference point of origin\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: global_coordinate_system\nrange: string"
  },
  {
    "objectID": "schema/JobType.html",
    "href": "schema/JobType.html",
    "title": "Enum: JobType",
    "section": "",
    "text": "URI: JobType\n\n\n\n\n\n\n\n\n\n\nValue\nMeaning\nDescription\n\n\n\n\nignore\nNone\nDummy job to ignore: Associated job description may describe arbitrary column…\n\n\ndensity\nNone\nODE version of the sea lice accumulation model\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\njob_type\nWhile this is analogous to Dublin Core’s notion of type, it is specific to jo…\n\n\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: JobType\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\npermissible_values:\n  ignore:\n    text: ignore\n    description: 'Dummy job to ignore: Associated job description may describe arbitrary\n      columns, underlying variables, or tables'\n  density:\n    text: density\n    description: ODE version of the sea lice accumulation model"
  },
  {
    "objectID": "schema/JobType.html#permissible-values",
    "href": "schema/JobType.html#permissible-values",
    "title": "Enum: JobType",
    "section": "",
    "text": "Value\nMeaning\nDescription\n\n\n\n\nignore\nNone\nDummy job to ignore: Associated job description may describe arbitrary column…\n\n\ndensity\nNone\nODE version of the sea lice accumulation model"
  },
  {
    "objectID": "schema/JobType.html#slots",
    "href": "schema/JobType.html#slots",
    "title": "Enum: JobType",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\njob_type\nWhile this is analogous to Dublin Core’s notion of type, it is specific to jo…"
  },
  {
    "objectID": "schema/JobType.html#identifier-and-mapping-information",
    "href": "schema/JobType.html#identifier-and-mapping-information",
    "title": "Enum: JobType",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/JobType.html#linkml-source",
    "href": "schema/JobType.html#linkml-source",
    "title": "Enum: JobType",
    "section": "",
    "text": "name: JobType\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\npermissible_values:\n  ignore:\n    text: ignore\n    description: 'Dummy job to ignore: Associated job description may describe arbitrary\n      columns, underlying variables, or tables'\n  density:\n    text: density\n    description: ODE version of the sea lice accumulation model"
  },
  {
    "objectID": "schema/meta.html",
    "href": "schema/meta.html",
    "title": "meta",
    "section": "",
    "text": "meta\nNone\nURI: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/ScopeDesc.html",
    "href": "schema/ScopeDesc.html",
    "title": "Class: ScopeDesc",
    "section": "",
    "text": "Manifest: column scope description and attributes including variable underpinning the column\nURI: saved:ScopeDesc\n classDiagram\n    class ScopeDesc\n    click ScopeDesc href \"../ScopeDesc\"\n      ScopeDesc : column\n        \n      ScopeDesc : table\n        \n          \n    \n    \n    ScopeDesc --&gt; \"1\" TableDesc : table\n    click TableDesc href \"../TableDesc\"\n\n        \n      ScopeDesc : variable\n        \n          \n    \n    \n    ScopeDesc --&gt; \"1\" ExtColumnDesc : variable\n    click ExtColumnDesc href \"../ExtColumnDesc\"\n\n        \n      \n\n\n\n\n\n\nName\nCardinality and Range\nDescription\nInheritance\n\n\n\n\ncolumn\n1  String\nColumn name in table\ndirect\n\n\nvariable\n1  ExtColumnDesc\nName of variable underpinning column, specific to the job, used for pattern-m…\ndirect\n\n\ntable\n1  TableDesc\nTable description from which column is drawn, specifically matching the `atom…\ndirect\n\n\n\n\n\n\n\n\n\nused by\nused in\ntype\nused\n\n\n\n\nJobDesc\njob_scope_descriptive\nrange\nScopeDesc\n\n\nJobDesc\njob_scope_collected\nrange\nScopeDesc\n\n\nJobDesc\njob_scope_modelled\nrange\nScopeDesc\n\n\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\n\n\nMapping Type\nMapped Value\n\n\n\n\nself\nsaved:ScopeDesc\n\n\nnative\nsaved:ScopeDesc\n\n\n\n\n\n\n\n\n\n\nname: ScopeDesc\ndescription: 'Manifest: column scope description and attributes including variable\n  underpinning the column'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- column\n- variable\n- table\n\n\n\n\n\nname: ScopeDesc\ndescription: 'Manifest: column scope description and attributes including variable\n  underpinning the column'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  column:\n    name: column\n    description: Column name in table\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: false\n    alias: column\n    owner: ScopeDesc\n    domain_of:\n    - ScopeDesc\n    range: string\n    required: true\n  variable:\n    name: variable\n    description: Name of variable underpinning column, specific to the job, used for\n      pattern-matching\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: false\n    alias: variable\n    owner: ScopeDesc\n    domain_of:\n    - ScopeDesc\n    range: ExtColumnDesc\n    required: true\n  table:\n    name: table\n    description: Table description from which column is drawn, specifically matching\n      the `atomic_name' field of a given instance of a `TableDesc' class.\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: false\n    alias: table\n    owner: ScopeDesc\n    domain_of:\n    - ScopeDesc\n    range: TableDesc\n    required: true"
  },
  {
    "objectID": "schema/ScopeDesc.html#slots",
    "href": "schema/ScopeDesc.html#slots",
    "title": "Class: ScopeDesc",
    "section": "",
    "text": "Name\nCardinality and Range\nDescription\nInheritance\n\n\n\n\ncolumn\n1  String\nColumn name in table\ndirect\n\n\nvariable\n1  ExtColumnDesc\nName of variable underpinning column, specific to the job, used for pattern-m…\ndirect\n\n\ntable\n1  TableDesc\nTable description from which column is drawn, specifically matching the `atom…\ndirect"
  },
  {
    "objectID": "schema/ScopeDesc.html#usages",
    "href": "schema/ScopeDesc.html#usages",
    "title": "Class: ScopeDesc",
    "section": "",
    "text": "used by\nused in\ntype\nused\n\n\n\n\nJobDesc\njob_scope_descriptive\nrange\nScopeDesc\n\n\nJobDesc\njob_scope_collected\nrange\nScopeDesc\n\n\nJobDesc\njob_scope_modelled\nrange\nScopeDesc"
  },
  {
    "objectID": "schema/ScopeDesc.html#identifier-and-mapping-information",
    "href": "schema/ScopeDesc.html#identifier-and-mapping-information",
    "title": "Class: ScopeDesc",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/ScopeDesc.html#mappings",
    "href": "schema/ScopeDesc.html#mappings",
    "title": "Class: ScopeDesc",
    "section": "",
    "text": "Mapping Type\nMapped Value\n\n\n\n\nself\nsaved:ScopeDesc\n\n\nnative\nsaved:ScopeDesc"
  },
  {
    "objectID": "schema/ScopeDesc.html#linkml-source",
    "href": "schema/ScopeDesc.html#linkml-source",
    "title": "Class: ScopeDesc",
    "section": "",
    "text": "name: ScopeDesc\ndescription: 'Manifest: column scope description and attributes including variable\n  underpinning the column'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nslots:\n- column\n- variable\n- table\n\n\n\n\n\nname: ScopeDesc\ndescription: 'Manifest: column scope description and attributes including variable\n  underpinning the column'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nattributes:\n  column:\n    name: column\n    description: Column name in table\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: false\n    alias: column\n    owner: ScopeDesc\n    domain_of:\n    - ScopeDesc\n    range: string\n    required: true\n  variable:\n    name: variable\n    description: Name of variable underpinning column, specific to the job, used for\n      pattern-matching\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: false\n    alias: variable\n    owner: ScopeDesc\n    domain_of:\n    - ScopeDesc\n    range: ExtColumnDesc\n    required: true\n  table:\n    name: table\n    description: Table description from which column is drawn, specifically matching\n      the `atomic_name' field of a given instance of a `TableDesc' class.\n    from_schema: https://marine.gov.scot/metadata/saved/schema/meta/\n    rank: 1000\n    multivalued: false\n    alias: table\n    owner: ScopeDesc\n    domain_of:\n    - ScopeDesc\n    range: TableDesc\n    required: true"
  },
  {
    "objectID": "schema/provenance.html",
    "href": "schema/provenance.html",
    "title": "Slot: provenance",
    "section": "",
    "text": "Provenance of an element, or a set of elements. This is distinct from Dublin Core’s notion of provenance, which concerns any changes in ownership/custody of the resource since its creation.\nURI: saved:provenance\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: provenance\ndescription: Provenance of an element, or a set of elements. This is distinct from\n  Dublin Core's notion of provenance, which concerns any changes in ownership/custody\n  of the resource since its creation.\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:notes\n- dcterms:provenance\nrank: 1000\nalias: provenance\nrange: string"
  },
  {
    "objectID": "schema/provenance.html#properties",
    "href": "schema/provenance.html#properties",
    "title": "Slot: provenance",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/provenance.html#identifier-and-mapping-information",
    "href": "schema/provenance.html#identifier-and-mapping-information",
    "title": "Slot: provenance",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/provenance.html#linkml-source",
    "href": "schema/provenance.html#linkml-source",
    "title": "Slot: provenance",
    "section": "",
    "text": "name: provenance\ndescription: Provenance of an element, or a set of elements. This is distinct from\n  Dublin Core's notion of provenance, which concerns any changes in ownership/custody\n  of the resource since its creation.\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- saved:notes\n- dcterms:provenance\nrank: 1000\nalias: provenance\nrange: string"
  },
  {
    "objectID": "schema/String.html",
    "href": "schema/String.html",
    "title": "Type: String",
    "section": "",
    "text": "A character string\nURI: xsd:string\n\nbase: str\nuri: xsd:string\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/String.html#identifier-and-mapping-information",
    "href": "schema/String.html#identifier-and-mapping-information",
    "title": "Type: String",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/LatLonType.html",
    "href": "schema/LatLonType.html",
    "title": "Type: LatLonType",
    "section": "",
    "text": "URI: saved:LatLon\n\nbase: str\nuri: saved:LatLon\nrepr: str\npattern: [0-9]+o [0-9]+.[0-9]+[N|W]\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/LatLonType.html#identifier-and-mapping-information",
    "href": "schema/LatLonType.html#identifier-and-mapping-information",
    "title": "Type: LatLonType",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/table.html",
    "href": "schema/table.html",
    "title": "Slot: table",
    "section": "",
    "text": "Table description from which column is drawn, specifically matching the atomic_name' field of a given instance of aTableDesc’ class.\nURI: saved:table\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpin…\nno\n\n\n\n\n\n\n\nRange: TableDesc\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: table\ndescription: Table description from which column is drawn, specifically matching the\n  `atomic_name' field of a given instance of a `TableDesc' class.\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: false\nalias: table\ndomain_of:\n- ScopeDesc\nrange: TableDesc\nrequired: true"
  },
  {
    "objectID": "schema/table.html#applicable-classes",
    "href": "schema/table.html#applicable-classes",
    "title": "Slot: table",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nScopeDesc\nManifest: column scope description and attributes including variable underpin…\nno"
  },
  {
    "objectID": "schema/table.html#properties",
    "href": "schema/table.html#properties",
    "title": "Slot: table",
    "section": "",
    "text": "Range: TableDesc\nRequired: True"
  },
  {
    "objectID": "schema/table.html#identifier-and-mapping-information",
    "href": "schema/table.html#identifier-and-mapping-information",
    "title": "Slot: table",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/table.html#linkml-source",
    "href": "schema/table.html#linkml-source",
    "title": "Slot: table",
    "section": "",
    "text": "name: table\ndescription: Table description from which column is drawn, specifically matching the\n  `atomic_name' field of a given instance of a `TableDesc' class.\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: false\nalias: table\ndomain_of:\n- ScopeDesc\nrange: TableDesc\nrequired: true"
  },
  {
    "objectID": "schema/lice_af_total.html",
    "href": "schema/lice_af_total.html",
    "title": "Slot: lice_af_total",
    "section": "",
    "text": "Total number of Salmon lice per fish\nURI: saved:lice_af_total\n\n\n\ncolumn_collected\n\nlice_af_total\n\n\n\n\n\n\nRange: Integer\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: lice_af_total\ndescription: Total number of Salmon lice per fish\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: lice_af_total\nrange: integer"
  },
  {
    "objectID": "schema/lice_af_total.html#inheritance",
    "href": "schema/lice_af_total.html#inheritance",
    "title": "Slot: lice_af_total",
    "section": "",
    "text": "column_collected\n\nlice_af_total"
  },
  {
    "objectID": "schema/lice_af_total.html#properties",
    "href": "schema/lice_af_total.html#properties",
    "title": "Slot: lice_af_total",
    "section": "",
    "text": "Range: Integer"
  },
  {
    "objectID": "schema/lice_af_total.html#identifier-and-mapping-information",
    "href": "schema/lice_af_total.html#identifier-and-mapping-information",
    "title": "Slot: lice_af_total",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/lice_af_total.html#linkml-source",
    "href": "schema/lice_af_total.html#linkml-source",
    "title": "Slot: lice_af_total",
    "section": "",
    "text": "name: lice_af_total\ndescription: Total number of Salmon lice per fish\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: lice_af_total\nrange: integer"
  },
  {
    "objectID": "schema/Datetime.html",
    "href": "schema/Datetime.html",
    "title": "Type: Datetime",
    "section": "",
    "text": "The combination of a date and time\nURI: xsd:dateTime\n\nbase: XSDDateTime\nuri: xsd:dateTime\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Datetime.html#identifier-and-mapping-information",
    "href": "schema/Datetime.html#identifier-and-mapping-information",
    "title": "Type: Datetime",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/national_grid_reference.html",
    "href": "schema/national_grid_reference.html",
    "title": "Slot: national_grid_reference",
    "section": "",
    "text": "National grid reference (NGR) point of origin\nURI: saved:national_grid_reference\n\n\n\ncolumn_descriptive\n\nnational_grid_reference\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: national_grid_reference\ndescription: National grid reference (NGR) point of origin\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: national_grid_reference\nrange: string"
  },
  {
    "objectID": "schema/national_grid_reference.html#inheritance",
    "href": "schema/national_grid_reference.html#inheritance",
    "title": "Slot: national_grid_reference",
    "section": "",
    "text": "column_descriptive\n\nnational_grid_reference"
  },
  {
    "objectID": "schema/national_grid_reference.html#properties",
    "href": "schema/national_grid_reference.html#properties",
    "title": "Slot: national_grid_reference",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/national_grid_reference.html#identifier-and-mapping-information",
    "href": "schema/national_grid_reference.html#identifier-and-mapping-information",
    "title": "Slot: national_grid_reference",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/national_grid_reference.html#linkml-source",
    "href": "schema/national_grid_reference.html#linkml-source",
    "title": "Slot: national_grid_reference",
    "section": "",
    "text": "name: national_grid_reference\ndescription: National grid reference (NGR) point of origin\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: national_grid_reference\nrange: string"
  },
  {
    "objectID": "schema/description.html",
    "href": "schema/description.html",
    "title": "Slot: description",
    "section": "",
    "text": "Human-readable description of the element\nURI: dcterms:description\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: description\ndescription: Human-readable description of the element\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nslot_uri: dcterms:description\nalias: description\ndomain_of:\n- TableDesc\nrange: string"
  },
  {
    "objectID": "schema/description.html#applicable-classes",
    "href": "schema/description.html#applicable-classes",
    "title": "Slot: description",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno"
  },
  {
    "objectID": "schema/description.html#properties",
    "href": "schema/description.html#properties",
    "title": "Slot: description",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/description.html#identifier-and-mapping-information",
    "href": "schema/description.html#identifier-and-mapping-information",
    "title": "Slot: description",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/description.html#linkml-source",
    "href": "schema/description.html#linkml-source",
    "title": "Slot: description",
    "section": "",
    "text": "name: description\ndescription: Human-readable description of the element\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nslot_uri: dcterms:description\nalias: description\ndomain_of:\n- TableDesc\nrange: string"
  },
  {
    "objectID": "schema/job_scope.html",
    "href": "schema/job_scope.html",
    "title": "Slot: job_scope",
    "section": "",
    "text": "A collection of column descriptions\nURI: saved:job_scope\n\n\n\njob_scope\n\njob_scope_descriptive\njob_scope_collected\njob_scope_modelled\n\n\n\n\n\n\nRange: ScopeDesc\nMultivalued: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: job_scope\ndescription: A collection of column descriptions\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: true\nalias: job_scope\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/job_scope.html#inheritance",
    "href": "schema/job_scope.html#inheritance",
    "title": "Slot: job_scope",
    "section": "",
    "text": "job_scope\n\njob_scope_descriptive\njob_scope_collected\njob_scope_modelled"
  },
  {
    "objectID": "schema/job_scope.html#properties",
    "href": "schema/job_scope.html#properties",
    "title": "Slot: job_scope",
    "section": "",
    "text": "Range: ScopeDesc\nMultivalued: True"
  },
  {
    "objectID": "schema/job_scope.html#identifier-and-mapping-information",
    "href": "schema/job_scope.html#identifier-and-mapping-information",
    "title": "Slot: job_scope",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/job_scope.html#linkml-source",
    "href": "schema/job_scope.html#linkml-source",
    "title": "Slot: job_scope",
    "section": "",
    "text": "name: job_scope\ndescription: A collection of column descriptions\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nmultivalued: true\nalias: job_scope\nrange: ScopeDesc\ninlined: true\ninlined_as_list: true"
  },
  {
    "objectID": "schema/fish_species_scientific.html",
    "href": "schema/fish_species_scientific.html",
    "title": "Slot: fish_species_scientific",
    "section": "",
    "text": "Scientific name of species sampled\nURI: saved:fish_species_scientific\n\n\n\ncolumn_collected\n\nfish_species_scientific\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: fish_species_scientific\ndescription: Scientific name of species sampled\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nbroad_mappings:\n- saved:fish_species_common\nrank: 1000\nis_a: column_collected\nalias: fish_species_scientific\nrange: string"
  },
  {
    "objectID": "schema/fish_species_scientific.html#inheritance",
    "href": "schema/fish_species_scientific.html#inheritance",
    "title": "Slot: fish_species_scientific",
    "section": "",
    "text": "column_collected\n\nfish_species_scientific"
  },
  {
    "objectID": "schema/fish_species_scientific.html#properties",
    "href": "schema/fish_species_scientific.html#properties",
    "title": "Slot: fish_species_scientific",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/fish_species_scientific.html#identifier-and-mapping-information",
    "href": "schema/fish_species_scientific.html#identifier-and-mapping-information",
    "title": "Slot: fish_species_scientific",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/fish_species_scientific.html#linkml-source",
    "href": "schema/fish_species_scientific.html#linkml-source",
    "title": "Slot: fish_species_scientific",
    "section": "",
    "text": "name: fish_species_scientific\ndescription: Scientific name of species sampled\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nbroad_mappings:\n- saved:fish_species_common\nrank: 1000\nis_a: column_collected\nalias: fish_species_scientific\nrange: string"
  },
  {
    "objectID": "schema/fish_length.html",
    "href": "schema/fish_length.html",
    "title": "Slot: fish_length",
    "section": "",
    "text": "Length of fish expressed (mm)\nURI: saved:fish_length\n\n\n\ncolumn_collected\n\nfish_length\n\n\n\n\n\n\nRange: Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: fish_length\ndescription: Length of fish expressed (mm)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: fish_length\nrange: float"
  },
  {
    "objectID": "schema/fish_length.html#inheritance",
    "href": "schema/fish_length.html#inheritance",
    "title": "Slot: fish_length",
    "section": "",
    "text": "column_collected\n\nfish_length"
  },
  {
    "objectID": "schema/fish_length.html#properties",
    "href": "schema/fish_length.html#properties",
    "title": "Slot: fish_length",
    "section": "",
    "text": "Range: Float"
  },
  {
    "objectID": "schema/fish_length.html#identifier-and-mapping-information",
    "href": "schema/fish_length.html#identifier-and-mapping-information",
    "title": "Slot: fish_length",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/fish_length.html#linkml-source",
    "href": "schema/fish_length.html#linkml-source",
    "title": "Slot: fish_length",
    "section": "",
    "text": "name: fish_length\ndescription: Length of fish expressed (mm)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_collected\nalias: fish_length\nrange: float"
  },
  {
    "objectID": "schema/local_version.html",
    "href": "schema/local_version.html",
    "title": "Slot: local_version",
    "section": "",
    "text": "Version number of local submission utility\nURI: saved:local_version\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno\n\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: local_version\ndescription: Version number of local submission utility\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- pav:version\nrank: 1000\nalias: local_version\ndomain_of:\n- ManifestDesc\nrange: string\nrequired: false"
  },
  {
    "objectID": "schema/local_version.html#applicable-classes",
    "href": "schema/local_version.html#applicable-classes",
    "title": "Slot: local_version",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nManifestDesc\nManifest: job invocation specification\nno"
  },
  {
    "objectID": "schema/local_version.html#properties",
    "href": "schema/local_version.html#properties",
    "title": "Slot: local_version",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/local_version.html#identifier-and-mapping-information",
    "href": "schema/local_version.html#identifier-and-mapping-information",
    "title": "Slot: local_version",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/local_version.html#linkml-source",
    "href": "schema/local_version.html#linkml-source",
    "title": "Slot: local_version",
    "section": "",
    "text": "name: local_version\ndescription: Version number of local submission utility\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nnarrow_mappings:\n- pav:version\nrank: 1000\nalias: local_version\ndomain_of:\n- ManifestDesc\nrange: string\nrequired: false"
  },
  {
    "objectID": "schema/resource_path.html",
    "href": "schema/resource_path.html",
    "title": "Slot: resource_path",
    "section": "",
    "text": "Path or URI of resource\nURI: saved:resource_path\n\n\n\npath\n\nresource_path\n\n\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\n\n\n\n\n\nRange: Uri\nRequired: True\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: resource_path\ndescription: Path or URI of resource\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: path\nalias: resource_path\ndomain_of:\n- TableDesc\nrange: uri\nrequired: true"
  },
  {
    "objectID": "schema/resource_path.html#inheritance",
    "href": "schema/resource_path.html#inheritance",
    "title": "Slot: resource_path",
    "section": "",
    "text": "path\n\nresource_path"
  },
  {
    "objectID": "schema/resource_path.html#applicable-classes",
    "href": "schema/resource_path.html#applicable-classes",
    "title": "Slot: resource_path",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno"
  },
  {
    "objectID": "schema/resource_path.html#properties",
    "href": "schema/resource_path.html#properties",
    "title": "Slot: resource_path",
    "section": "",
    "text": "Range: Uri\nRequired: True"
  },
  {
    "objectID": "schema/resource_path.html#identifier-and-mapping-information",
    "href": "schema/resource_path.html#identifier-and-mapping-information",
    "title": "Slot: resource_path",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/resource_path.html#linkml-source",
    "href": "schema/resource_path.html#linkml-source",
    "title": "Slot: resource_path",
    "section": "",
    "text": "name: resource_path\ndescription: Path or URI of resource\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: path\nalias: resource_path\ndomain_of:\n- TableDesc\nrange: uri\nrequired: true"
  },
  {
    "objectID": "schema/column_modelled.html",
    "href": "schema/column_modelled.html",
    "title": "Slot: column_modelled",
    "section": "",
    "text": "Column describes modelled data\nURI: saved:column_modelled\n\n\n\ncolumn_modelled\n\ncount_fish_interpolated\nlice_density_modelled\n\n\n\n\n\n\nRange: NONE\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: column_modelled\ndescription: Column describes modelled data\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: column_modelled"
  },
  {
    "objectID": "schema/column_modelled.html#inheritance",
    "href": "schema/column_modelled.html#inheritance",
    "title": "Slot: column_modelled",
    "section": "",
    "text": "column_modelled\n\ncount_fish_interpolated\nlice_density_modelled"
  },
  {
    "objectID": "schema/column_modelled.html#properties",
    "href": "schema/column_modelled.html#properties",
    "title": "Slot: column_modelled",
    "section": "",
    "text": "Range: NONE"
  },
  {
    "objectID": "schema/column_modelled.html#identifier-and-mapping-information",
    "href": "schema/column_modelled.html#identifier-and-mapping-information",
    "title": "Slot: column_modelled",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/column_modelled.html#linkml-source",
    "href": "schema/column_modelled.html#linkml-source",
    "title": "Slot: column_modelled",
    "section": "",
    "text": "name: column_modelled\ndescription: Column describes modelled data\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nalias: column_modelled"
  },
  {
    "objectID": "schema/Decimal.html",
    "href": "schema/Decimal.html",
    "title": "Type: Decimal",
    "section": "",
    "text": "A real number with arbitrary precision that conforms to the xsd:decimal specification\nURI: xsd:decimal\n\nbase: Decimal\nuri: xsd:decimal\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Decimal.html#identifier-and-mapping-information",
    "href": "schema/Decimal.html#identifier-and-mapping-information",
    "title": "Type: Decimal",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/site_name.html",
    "href": "schema/site_name.html",
    "title": "Slot: site_name",
    "section": "",
    "text": "Fish farm station/site local name\nURI: saved:site_name\n\n\n\ncolumn_descriptive\n\nsite_name\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: site_name\ndescription: Fish farm station/site local name\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: site_name\nrange: string"
  },
  {
    "objectID": "schema/site_name.html#inheritance",
    "href": "schema/site_name.html#inheritance",
    "title": "Slot: site_name",
    "section": "",
    "text": "column_descriptive\n\nsite_name"
  },
  {
    "objectID": "schema/site_name.html#properties",
    "href": "schema/site_name.html#properties",
    "title": "Slot: site_name",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/site_name.html#identifier-and-mapping-information",
    "href": "schema/site_name.html#identifier-and-mapping-information",
    "title": "Slot: site_name",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/site_name.html#linkml-source",
    "href": "schema/site_name.html#linkml-source",
    "title": "Slot: site_name",
    "section": "",
    "text": "name: site_name\ndescription: Fish farm station/site local name\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: site_name\nrange: string"
  },
  {
    "objectID": "schema/series.html",
    "href": "schema/series.html",
    "title": "Slot: series",
    "section": "",
    "text": "Data series to which a given observation belongs\nURI: saved:series\n\n\n\ncolumn_descriptive\n\nseries\n\n\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: series\ndescription: Data series to which a given observation belongs\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: series\nrange: string"
  },
  {
    "objectID": "schema/series.html#inheritance",
    "href": "schema/series.html#inheritance",
    "title": "Slot: series",
    "section": "",
    "text": "column_descriptive\n\nseries"
  },
  {
    "objectID": "schema/series.html#properties",
    "href": "schema/series.html#properties",
    "title": "Slot: series",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/series.html#identifier-and-mapping-information",
    "href": "schema/series.html#identifier-and-mapping-information",
    "title": "Slot: series",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/series.html#linkml-source",
    "href": "schema/series.html#linkml-source",
    "title": "Slot: series",
    "section": "",
    "text": "name: series\ndescription: Data series to which a given observation belongs\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: series\nrange: string"
  },
  {
    "objectID": "schema/Objectidentifier.html",
    "href": "schema/Objectidentifier.html",
    "title": "Type: Objectidentifier",
    "section": "",
    "text": "A URI or CURIE that represents an object in the model.\nURI: shex:iri\n\nbase: ElementIdentifier\nuri: shex:iri\nrepr: str\n\n\n\n\nUsed for inheritance and type checking\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Objectidentifier.html#comments",
    "href": "schema/Objectidentifier.html#comments",
    "title": "Type: Objectidentifier",
    "section": "",
    "text": "Used for inheritance and type checking"
  },
  {
    "objectID": "schema/Objectidentifier.html#identifier-and-mapping-information",
    "href": "schema/Objectidentifier.html#identifier-and-mapping-information",
    "title": "Type: Objectidentifier",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/atomic_name.html",
    "href": "schema/atomic_name.html",
    "title": "Slot: atomic_name",
    "section": "",
    "text": "Short-form name / atom: lower-case, no special characters excepting underscores\nURI: saved:atomic_name\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\nManifestDesc\nManifest: job invocation specification\nno\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno\n\n\nExtColumnDesc\nCatch-all external column description\nno\n\n\n\n\n\n\n\nRange: String\nRequired: True\nRegex pattern: ^:?[a-z]+[[a-z]|_|]*$\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: atomic_name\ndescription: 'Short-form name / atom: lower-case, no special characters excepting\n  underscores'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nexact_mappings:\n- dc:identifier\nbroad_mappings:\n- saved:name\n- dc:title\nrank: 1000\nidentifier: true\nalias: atomic_name\ndomain_of:\n- TableDesc\n- ExtColumnDesc\n- JobDesc\n- ManifestDesc\nrange: string\nrequired: true\npattern: ^:?[a-z]+[[a-z]|_|]*$"
  },
  {
    "objectID": "schema/atomic_name.html#applicable-classes",
    "href": "schema/atomic_name.html#applicable-classes",
    "title": "Slot: atomic_name",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\nManifestDesc\nManifest: job invocation specification\nno\n\n\nJobDesc\nManifest: job specification attributes which specific job sub-classes inherit\nno\n\n\nExtColumnDesc\nCatch-all external column description\nno"
  },
  {
    "objectID": "schema/atomic_name.html#properties",
    "href": "schema/atomic_name.html#properties",
    "title": "Slot: atomic_name",
    "section": "",
    "text": "Range: String\nRequired: True\nRegex pattern: ^:?[a-z]+[[a-z]|_|]*$"
  },
  {
    "objectID": "schema/atomic_name.html#identifier-and-mapping-information",
    "href": "schema/atomic_name.html#identifier-and-mapping-information",
    "title": "Slot: atomic_name",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/atomic_name.html#linkml-source",
    "href": "schema/atomic_name.html#linkml-source",
    "title": "Slot: atomic_name",
    "section": "",
    "text": "name: atomic_name\ndescription: 'Short-form name / atom: lower-case, no special characters excepting\n  underscores'\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nexact_mappings:\n- dc:identifier\nbroad_mappings:\n- saved:name\n- dc:title\nrank: 1000\nidentifier: true\nalias: atomic_name\ndomain_of:\n- TableDesc\n- ExtColumnDesc\n- JobDesc\n- ManifestDesc\nrange: string\nrequired: true\npattern: ^:?[a-z]+[[a-z]|_|]*$"
  },
  {
    "objectID": "schema/Boolean.html",
    "href": "schema/Boolean.html",
    "title": "Type: Boolean",
    "section": "",
    "text": "A binary (true or false) value\nURI: xsd:boolean\n\nbase: Bool\nuri: xsd:boolean\nrepr: bool\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Boolean.html#identifier-and-mapping-information",
    "href": "schema/Boolean.html#identifier-and-mapping-information",
    "title": "Type: Boolean",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/schema_path_ttl.html",
    "href": "schema/schema_path_ttl.html",
    "title": "Slot: schema_path_ttl",
    "section": "",
    "text": "Path of URI of schema associated with resource (RDF/TTL conversion of LinkML YAML)\nURI: saved:schema_path_ttl\n\n\n\npath\n\nschema_path_ttl\n\n\n\n\n\n\n\n\nName\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno\n\n\n\n\n\n\n\nRange: Uri\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: schema_path_ttl\ndescription: Path of URI of schema associated with resource (RDF/TTL conversion of\n  LinkML YAML)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: path\nalias: schema_path_ttl\ndomain_of:\n- TableDesc\nrange: uri\nrequired: false"
  },
  {
    "objectID": "schema/schema_path_ttl.html#inheritance",
    "href": "schema/schema_path_ttl.html#inheritance",
    "title": "Slot: schema_path_ttl",
    "section": "",
    "text": "path\n\nschema_path_ttl"
  },
  {
    "objectID": "schema/schema_path_ttl.html#applicable-classes",
    "href": "schema/schema_path_ttl.html#applicable-classes",
    "title": "Slot: schema_path_ttl",
    "section": "",
    "text": "Name\nDescription\nModifies Slot\n\n\n\n\nTableDesc\nManifest: data source descriptive attributes\nno"
  },
  {
    "objectID": "schema/schema_path_ttl.html#properties",
    "href": "schema/schema_path_ttl.html#properties",
    "title": "Slot: schema_path_ttl",
    "section": "",
    "text": "Range: Uri"
  },
  {
    "objectID": "schema/schema_path_ttl.html#identifier-and-mapping-information",
    "href": "schema/schema_path_ttl.html#identifier-and-mapping-information",
    "title": "Slot: schema_path_ttl",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/schema_path_ttl.html#linkml-source",
    "href": "schema/schema_path_ttl.html#linkml-source",
    "title": "Slot: schema_path_ttl",
    "section": "",
    "text": "name: schema_path_ttl\ndescription: Path of URI of schema associated with resource (RDF/TTL conversion of\n  LinkML YAML)\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: path\nalias: schema_path_ttl\ndomain_of:\n- TableDesc\nrange: uri\nrequired: false"
  },
  {
    "objectID": "schema/type.html",
    "href": "schema/type.html",
    "title": "Slot: type",
    "section": "",
    "text": "Nature or genre of the element\nURI: dcterms:type\n\n\n\n\nRange: String\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: type\ndescription: Nature or genre of the element\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nslot_uri: dcterms:type\nalias: type\nrange: string"
  },
  {
    "objectID": "schema/type.html#properties",
    "href": "schema/type.html#properties",
    "title": "Slot: type",
    "section": "",
    "text": "Range: String"
  },
  {
    "objectID": "schema/type.html#identifier-and-mapping-information",
    "href": "schema/type.html#identifier-and-mapping-information",
    "title": "Slot: type",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/type.html#linkml-source",
    "href": "schema/type.html#linkml-source",
    "title": "Slot: type",
    "section": "",
    "text": "name: type\ndescription: Nature or genre of the element\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nslot_uri: dcterms:type\nalias: type\nrange: string"
  },
  {
    "objectID": "schema/Jsonpointer.html",
    "href": "schema/Jsonpointer.html",
    "title": "Type: Jsonpointer",
    "section": "",
    "text": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.\nURI: xsd:string\n\nbase: str\nuri: xsd:string\nrepr: str\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Jsonpointer.html#identifier-and-mapping-information",
    "href": "schema/Jsonpointer.html#identifier-and-mapping-information",
    "title": "Type: Jsonpointer",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Float.html",
    "href": "schema/Float.html",
    "title": "Type: Float",
    "section": "",
    "text": "A real number that conforms to the xsd:float specification\nURI: xsd:float\n\nbase: float\nuri: xsd:float\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/Float.html#identifier-and-mapping-information",
    "href": "schema/Float.html#identifier-and-mapping-information",
    "title": "Type: Float",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/latitude.html",
    "href": "schema/latitude.html",
    "title": "Slot: latitude",
    "section": "",
    "text": "Latitude\nURI: saved:latitude\n\n\n\ncolumn_descriptive\n\nlatitude\n\n\n\n\n\n\nRange: NONE or LatLonType or Float\n\n\n\n\n\n\n\nfrom schema: https://marine.gov.scot/metadata/saved/schema/meta/\n\n\n\n\n\n\nname: latitude\ndescription: Latitude\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: latitude\nany_of:\n- range: LatLonType\n- range: float"
  },
  {
    "objectID": "schema/latitude.html#inheritance",
    "href": "schema/latitude.html#inheritance",
    "title": "Slot: latitude",
    "section": "",
    "text": "column_descriptive\n\nlatitude"
  },
  {
    "objectID": "schema/latitude.html#properties",
    "href": "schema/latitude.html#properties",
    "title": "Slot: latitude",
    "section": "",
    "text": "Range: NONE or LatLonType or Float"
  },
  {
    "objectID": "schema/latitude.html#identifier-and-mapping-information",
    "href": "schema/latitude.html#identifier-and-mapping-information",
    "title": "Slot: latitude",
    "section": "",
    "text": "from schema: https://marine.gov.scot/metadata/saved/schema/meta/"
  },
  {
    "objectID": "schema/latitude.html#linkml-source",
    "href": "schema/latitude.html#linkml-source",
    "title": "Slot: latitude",
    "section": "",
    "text": "name: latitude\ndescription: Latitude\nfrom_schema: https://marine.gov.scot/metadata/saved/schema/meta/\nrank: 1000\nis_a: column_descriptive\nalias: latitude\nany_of:\n- range: LatLonType\n- range: float"
  },
  {
    "objectID": "doc/misc/outline.html",
    "href": "doc/misc/outline.html",
    "title": "SAVED reproducible analytical pipeline (RAP) overview",
    "section": "",
    "text": "“RAP” stands for reproducible analytical pipeline1. This is a term commonly used in the civil service, and it is useful as it is largely self-explanatory and succint. The term is typically used to refer to the process of producing statistical reports and producing website documentation, whereas our use here is somewhat more expansive.\n\n\n\nThe first component of the pipeline is a data model based on LinkML, which defines variables which we agree should be used by those of us sharing data between each other. Not every variable in data provided will be in this data model. These data models are sometimes known as ontologies, and are part of the wider semantic web. The advantage of LinkML is that the schemata (YAML) are relatively easy to write compared to JSON or RDF/TTL, and that it allows us to define links between data consistently and in a machine-readable fashion. Linking data and agreeing on how to share it is a key element of the project overall, and is a pre-requisite to automating some of the analysis.\nThe second component of the pipeline is a collection of local Python programs (fisdat(1) and fisup(1)) which verify data against schema files, producing a job ‘manifest’ file, which may then be edited to describe jobs to be run on the data. This description is then used to upload the package of data, metadata, and job description, for subsequent processing. Schema files define the structure of any associated data files (a single schema may describe more than one data file), as well as how variables in data-sets relate to an underlying variable (or variables) in our own data model or in other data models/ontologies. Indeed, it is further possible to link variables across different schemata, some of which may not be in the parent data model or commonly-used ontologies, such as specific column names/aliases.\nThe third component of the pipeline is subsequent processing of our data. This is a computer program which monitors some location for data uploaded, runs jobs described by the data, then ‘bakes’2 the data into a package describing input, jobs specified, and output. A job is typically associated with some computer program run by the pipeline, and the package produced by the pipeline includes a static web page describing results, including any descriptive statistics or visualisations which can be generated. This is pushed to a well-known location, allowing results to be retrieved using a web browser.\n\n\n\n\n\n\n\n\n\n\n\nStep\nOperation\nLocation\n\n\n\n\n0.1\nModelling strategy\nLocal machine\n\n\n0.2\nPreparation/clean-up\nLocal machine\n\n\n1\nVerify schema, create job manifest (incl. UUID)\nLocal machine: existing Python program\n\n\n2\nUpload job data-set to storage service\nLocal machine: albeit depends on external storage service\n\n\n3\nAppend job metadata to queue and local DB\nRAP service: monitor storage for changes\n\n\n4\nFetch data required by job(s)\nRAP service: pull any changes from storage\n\n\n5\nRun job(s)\nRAP service\n\n\n6\nCache result(s) and/or data-set\nRAP service\n\n\n7\nGenerate HTML results incl. any errors + descriptive statistics/visualisations applicable\nRAP service and/or external web server\n\n\n\n\n\n\nNotably, this processing of data is distinctly decoupled from the place to which data are submitted, in the sense that this is a computer program monitoring multiple locations on the net to which data may be submitted. This may be ‘cloud’ storage services like Amazon Web Services or Google Cloud Platform (GCP), another computer program implementing an object store not unlike these services, or some directory local to the computer program. The current implementation monitors a ‘bucket’ on the Google Cloud Storage service.\nThe computer program in question is written in the Elixir programming language3 (which runs on the Erlang/OTP platform4) due to the extensive library support for ‘stages’ (GenStage5) as well as Elixir and Erlang/OTP’s common concurrency and fault-tolerant properties. This should allow the RAP program to scale (including across multiple computers), which is especially important if we use the thing extensively, or if there are a number of components which we run on different machines (e.g. cache, web server, data submission).\nWhile something like Python may be more widely used, the tooling for writing a data ingestion pipeline like ours is somewhat limited, as is Python’s concurrency support and support for functional programming. Therefore, even if Python had been selected, there would have been a number of technical issues to solve or be re-implemented.",
    "crumbs": [
      "Project outline"
    ]
  },
  {
    "objectID": "doc/misc/outline.html#about-rap",
    "href": "doc/misc/outline.html#about-rap",
    "title": "SAVED reproducible analytical pipeline (RAP) overview",
    "section": "",
    "text": "“RAP” stands for reproducible analytical pipeline1. This is a term commonly used in the civil service, and it is useful as it is largely self-explanatory and succint. The term is typically used to refer to the process of producing statistical reports and producing website documentation, whereas our use here is somewhat more expansive.",
    "crumbs": [
      "Project outline"
    ]
  },
  {
    "objectID": "doc/misc/outline.html#components-of-the-pipeline",
    "href": "doc/misc/outline.html#components-of-the-pipeline",
    "title": "SAVED reproducible analytical pipeline (RAP) overview",
    "section": "",
    "text": "The first component of the pipeline is a data model based on LinkML, which defines variables which we agree should be used by those of us sharing data between each other. Not every variable in data provided will be in this data model. These data models are sometimes known as ontologies, and are part of the wider semantic web. The advantage of LinkML is that the schemata (YAML) are relatively easy to write compared to JSON or RDF/TTL, and that it allows us to define links between data consistently and in a machine-readable fashion. Linking data and agreeing on how to share it is a key element of the project overall, and is a pre-requisite to automating some of the analysis.\nThe second component of the pipeline is a collection of local Python programs (fisdat(1) and fisup(1)) which verify data against schema files, producing a job ‘manifest’ file, which may then be edited to describe jobs to be run on the data. This description is then used to upload the package of data, metadata, and job description, for subsequent processing. Schema files define the structure of any associated data files (a single schema may describe more than one data file), as well as how variables in data-sets relate to an underlying variable (or variables) in our own data model or in other data models/ontologies. Indeed, it is further possible to link variables across different schemata, some of which may not be in the parent data model or commonly-used ontologies, such as specific column names/aliases.\nThe third component of the pipeline is subsequent processing of our data. This is a computer program which monitors some location for data uploaded, runs jobs described by the data, then ‘bakes’2 the data into a package describing input, jobs specified, and output. A job is typically associated with some computer program run by the pipeline, and the package produced by the pipeline includes a static web page describing results, including any descriptive statistics or visualisations which can be generated. This is pushed to a well-known location, allowing results to be retrieved using a web browser.",
    "crumbs": [
      "Project outline"
    ]
  },
  {
    "objectID": "doc/misc/outline.html#the-pipeline-step-by-step",
    "href": "doc/misc/outline.html#the-pipeline-step-by-step",
    "title": "SAVED reproducible analytical pipeline (RAP) overview",
    "section": "",
    "text": "Step\nOperation\nLocation\n\n\n\n\n0.1\nModelling strategy\nLocal machine\n\n\n0.2\nPreparation/clean-up\nLocal machine\n\n\n1\nVerify schema, create job manifest (incl. UUID)\nLocal machine: existing Python program\n\n\n2\nUpload job data-set to storage service\nLocal machine: albeit depends on external storage service\n\n\n3\nAppend job metadata to queue and local DB\nRAP service: monitor storage for changes\n\n\n4\nFetch data required by job(s)\nRAP service: pull any changes from storage\n\n\n5\nRun job(s)\nRAP service\n\n\n6\nCache result(s) and/or data-set\nRAP service\n\n\n7\nGenerate HTML results incl. any errors + descriptive statistics/visualisations applicable\nRAP service and/or external web server",
    "crumbs": [
      "Project outline"
    ]
  },
  {
    "objectID": "doc/misc/outline.html#technical-aspects-of-the-pipeline-program",
    "href": "doc/misc/outline.html#technical-aspects-of-the-pipeline-program",
    "title": "SAVED reproducible analytical pipeline (RAP) overview",
    "section": "",
    "text": "Notably, this processing of data is distinctly decoupled from the place to which data are submitted, in the sense that this is a computer program monitoring multiple locations on the net to which data may be submitted. This may be ‘cloud’ storage services like Amazon Web Services or Google Cloud Platform (GCP), another computer program implementing an object store not unlike these services, or some directory local to the computer program. The current implementation monitors a ‘bucket’ on the Google Cloud Storage service.\nThe computer program in question is written in the Elixir programming language3 (which runs on the Erlang/OTP platform4) due to the extensive library support for ‘stages’ (GenStage5) as well as Elixir and Erlang/OTP’s common concurrency and fault-tolerant properties. This should allow the RAP program to scale (including across multiple computers), which is especially important if we use the thing extensively, or if there are a number of components which we run on different machines (e.g. cache, web server, data submission).\nWhile something like Python may be more widely used, the tooling for writing a data ingestion pipeline like ours is somewhat limited, as is Python’s concurrency support and support for functional programming. Therefore, even if Python had been selected, there would have been a number of technical issues to solve or be re-implemented.",
    "crumbs": [
      "Project outline"
    ]
  },
  {
    "objectID": "doc/misc/outline.html#footnotes",
    "href": "doc/misc/outline.html#footnotes",
    "title": "SAVED reproducible analytical pipeline (RAP) overview",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nRAP Companion↩︎\nThe Baked Data architectural pattern↩︎\nhttps://elixir-lang.org/↩︎\nhttps://www.erlang.org/↩︎\nAnnouncing GenStage↩︎",
    "crumbs": [
      "Project outline"
    ]
  },
  {
    "objectID": "doc/utils/schemata.html",
    "href": "doc/utils/schemata.html",
    "title": "YAML schema writing",
    "section": "",
    "text": "Each data file has a schema, which we use both to validate and describe data. The SAVED data model/ontology is based on LinkML, with schema files authored in the YAML format. It is useful to think about these files as being made up of two main elements:\n\nMetadata about the schema file. These declare certain fields essential for validation of the schema (e.g. a unique identifier and name for the schema), as well as extra, optional data such as its license, or when it was last updated.\nFields which describe the structure of data files to be validated against the schema. These associate the names columns with a description, a data type (e.g. text field, or number), a provenance (e.g. modelled, or simulated), and with a variable described in the data model (e.g. saved:lice_af_total).\n\nTop-level fields of a typical schema are summarised as follows, including what is strictly necessary for a schema file to be valid a LinkML schema file, what is necessary for validation, as well as a few other fields which you may want to include. This summary is not exhaustive, in fact, any fields in the LinkML model should be valid. The example schema files included with the fish data utilities were originally devised based on the JSON/CSVW schema files which we were writing before, as well as from following the LinkML tutorial. You can choose to enrich your schema file with additional fields beyond what is needed just for validation, then.\n\n\n\n\n\n\n\n\n\nField\nDescription\nDo I need this?\nExample\n\n\n\n\nid\nFully unique resource identifier: a URI\nYes\nid: https://marine.gov.scot/metadata/saved/rap/sentinel_cages_sampling\n\n\nname\nName of the resource, an ‘atom’ (text field with no spaces, only underscores)\nYes\nname: sentinel_cages_sampling\n\n\ntitle\nLonger title of the schema: this may be free text\nYes\ntitle: Sentinel cages sampling information schema\n\n\ndescription\nLong-form free text description of the schema\nNo\ndescription: This is the example schema for sentinel cages sampling…\n\n\nprefixes\nList of mappings between an ‘atom’ and URI prefix which may be prefixed to identifiers\nYes\nSee note\n\n\nimports\nImport of slots/types/classes from other LinkML schema resources\nYes\nSee note\n\n\ndefault_prefix\nDefault prefix declaring URI to map to identifiers in the schema\nYes\ndefault_prefix: mssamp\n\n\nlicense\nURI/identifier of license associated with schema file\nNo\nlicense: https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\n\n\nkeywords\nList of keywords associated with schema, each list item may be free text\nNo\nSee note\n\n\ncreated_by\n‘Atom’ indicating original creator of schema\nNo\ncreated_by: marinescot\n\n\nmodified_by\n‘Atom’ indicating who last modified schema\nNo\nmodified_by: saved\n\n\nlast_updated_on\nTime-stamp (ISO8601 YYYY-MM-DD format) indicating last update\nNo\nlast_updated_on: \"2024-04-26\"\n\n\n\n\n\n\nYAML documents are made up of blocks, with indentation indicating membership of elements, and elements as mappings between ‘atoms’ and values. For example, in the LinkML schema, the slot for the Sampling.Note column is declared as follows:\nslots:\n  Sampling.Note:\n    description: \"Notes on issues with sampling\"\n    range:       string\n    required:    false\n    exact_mappings:\n      -  saved:date\nKey things to keep in mind: 1. YAML is a machine-readable language, and indentation matters. In the above example, if range was indented two spaces fewer, it would not be considered to be part of the Sampling.Note block. 2. It is not necessary to quote the majority of text fields (even free text), except if the text includes control characters used by YAML, such as colons (which mark key/value pairs), dashes (which designate lists), or hashes (which designate comments). 3. If a text field is multi-line (sometimes useful for descriptions), you need to use &gt;- and indent the text in question below. The end of the indentation, here, rather than quotes, marks the end of the text field. 4. The order of fields does not strictly matter, but at least in terms of writing schema files for LinkML, it makes good sense to follow the split described above (metadata describing the schema; fields describing structure of data) and the order effectively described in this document, and indicated in the examples.\n\n\n\n\n\nThe exact distinction between these is not at first glance very clear. It can be summarised as follows:\n\nThe identifier (id) is a unique resource where the schema file may (perhaps should) live in the future. The examples use the “rap” directory under the SAVED prefix hosted on the Marine Scotland namespace. If you are not Marine Scotland, it is preferable to choose a URI which you control and could host something there. In any case, this field is necessary for a schema to be valid and to validate data files.\nThe name field is the a unique name for the schema. This is an “atom” with no spaces, only underscores. It is likely easiest just to use the end of the identifier above, e.g. for the ID https://marine.gov.scot/metadata/saved/rap/sentinel_cages_site, one might choose the name sentinel_cages_site.\nThe title of the resource is a free text field. Keep it relatively short as this will make the generated output (web pages) clearer.\nThe description is a longer free text field. Whereas the identifier, name and title fields are mandatory, this description is not. This is the place to put longer descriptions of the data, rather than the title field, although they both allow free text.\n\nid: http://marine.gov.scot/metadata/saved/rap/sentinel_cages_site/\nname:  sentinel_cages_site\ntitle: Sentinel cages station information schema\ndescription: &gt;-\n  This is an example for the purposes of testing fisdat(1) and fisup(1)\n  This is a multi-line text field, the start of which is the `&gt;-' section,\n  with the end indicated by change in indentation\n\n\n\n\n\nPrefixes are a collection of between an atom (text field with no spaces, only underscores) and a URI prefix. These mappings are prefixes because they are used to create unique identifiers from names, i.e. they prefix the name of a thing. Rather than type out the name of the URI every time, we use the short atom to refer to it.\nConsider the following set of prefixes:\nprefixes:\n  linkml: https://w3id.org/linkml/\n  saved:  https://marine.gov.scot/metadata/saved/schema/\n  rap:    https://marine.gov.scot/metadata/saved/rap/\n  mssite: https://marine.gov.scot/metadata/saved/rap/sentinel_cages_site/\n  mssamp: https://marine.gov.scot/metadata/saved/rap/sentinel_cages_sampling/\n  xsd:    http://www.w3.org/2001/XMLSchema#\nIdentifiers are referenced using the form &lt;atom&gt;:&lt;resource name&gt;, and are expanded to &lt;prefix URI&gt;&lt;resource name&gt;. The last character of the prefix URI is important because the expansion does not assume anything about it, e.g. both the xsd (which ends in a hash) and the other prefixes are valid. The expansion is very simple. The identifier saved:lice_af_total would expand to https://marine.gov.scot/metadata/saved/schema/lice_af_total.\n\n\n\nThe default prefix is a single reference to a prefix listed as above:\ndefault_prefix: mssamp\nSome things to keep in mind: - The purpose of the default prefix is to create unique identifiers for any element declared in the current schema file. However, it is possible that this prefix could be used across different schema files. Indeed, this is the approach taken for producing data models using LinkML schema files: they share a single prefix, and can import each other. - For example, in the Sampling.Note example above, other documents could refer to this identifier using the URI https://marine.gov.scot/metadata/saved/rap/sentinel_cages_sampling/Sampling.Note (expanded from mssamp:Sampling.Note). - Indeed, external schema files may also declare some prefix (it could be the same, mssamp; or e.g. mssamp_alt, as long as it maps to the same URI as mssamp does in this document), they could also refer to it using that prefix. - When declaring prefixes, although they are arbitrary, there tends to be conventions for certain well-known prefixes, a sample list of which is summarised here.\nThe basic idea here, then, is that we need to declare a default prefix which is unique to this document, to identify elements in this document, both internally and externally.\n\n\n\nLinkML has a type called UrioOrCurie. This is either a full URI, or the compact equivalent. That is, the compact URI, or CURIE, is a succint way to refer to resources under the prefix in question, and it also allows us to name the prefix to some short-hand which describes its role.\nConsider the saved prefix above (which has a trailing slash). Given a URI, https://marine.gov.scot/metadata/saved/schema/lice_density_collected, then, the compact URI equivalent is anything after the prefix, i.e. saved:lice_density_collected. A space on either side of the colon (e.g. saved: lice_density_collected) is not a valid CURIE, and would, at least in the YAML files, be considered to be part of the YAML syntax, which uses colons extensively.\nSee the following page for a bit more information about the role of URIs and CURIEs: https://cthoyt.com/2021/09/14/curies.html\n\n\n\nImports are a link to an external LinkML schema, from which items declared in the schema are imported.\nConsider the following set of imports:\nimports:\n  linkml:types\n  linkml:datasets\n  saved:core\n  saved:job\nThere is an important distinction between referencing an identifier and importing it. For example, if saved:core in the example above declared the type saved:LatLonType, to use this as a range proper, we would need to import saved:core in the imports directive above. That is, saved:LatLonType is effectively just a URI (it expands to https://marine.gov.scot/metadata/saved/schema/LatLonType), and isn’t usable in a different LinkML schema file just by referencing it. Note that importing it would bring it into the top level, i.e. to use it as a range, we would simply use it as LatLonRange.\n\n\n\nThis hints at the importance of the prefixes and their relation to imports.\n\nAny import must use both a valid prefix, and the resource in question must exist and be a valid LinkML schema file.\nTo be a valid LinkML schema file, declare both the linkml prefix and import linkml:types\nOur schema files are based on our own data model/ontology, so, always declare the saved prefix and import saved:core\nThe schema file must declare a prefix unique to this document, to be set as the default prefix in the document.\nIt is not necessary to import a schema file to reference anything related to the prefix, and in fact, this may cause problems. However, it is always necessary to add a prefix to the prefixes directive before referencing any identifier underneath it, as it will be impossible to expand the identifier into a URI.\n\n\n\n\nYou have probably noticed that both SAVED data model/ontology and the schema files which we are writing are based on LinkML. This partly derives from the design of LinkML itself, which “doesn’t draw any hard and fast distinction between data and metadata, recognising that “metadata” is often defined in relative terms.”\nHere, it can be said that the schema files which we are writing describe data files, whereas the manifest files which the fish data utilities create are data files, which are (usually) in the YAML format.\nA further point which is relevant to this section is that there are circumstances in which YAML schema files will be valid, despite prefixes being used but not declared, whereas they may fail conversion due to this issue. Make sure that all identifiers referenced use a prefix which has been declared.\n\n\n\n\n\n\n\nThe LinkML has three related concepts: 1. Classes, which are effectively a way to describe things with attributes 2. Slots, which are attributes, and correspond closely to the columns in our data files 3. Types, which extend basic types (such as numbers or text strings)\nFor validation, at minimum, fisdat(1) expects a couple of things: 1. Declaration of a simple class TableSchema, which is used by the programs to actually load the schema files 2. A set of slots referenced in the schema, corresponding to the columns of the data file in question, which are included as attributes of the TableSchema class\nThe following is a shortened example TableSchema object from the sentinel cages (sampling information) example. We can think of TableSchema as a class which has column attributes.\nslots:\n  Cage.Number:\n    description:    A unique identifier for each cage which links back to station information. Not necessarily a number.\n    any_of:\n      - range:      integer\n      - range:      string\n    is_a:           column_descriptive\n    exact_mappings: saved:cage_id\n    implements:     linkml:elements\n    required:       true\n\n  Deployment.date:\n    description:    Date cage was stocked with fish\n    range:          string\n    is_a:           column_descriptive\n    exact_mappings:\n      - saved:date\n      - saved:deployment_date\n    implements:     linkml:elements\n    required:       true\n\n  Fish.Weight.g:\n    description:    Weight of fish expressed in grams\n    range:          float\n    is_a:           column_collected\n    exact_mappings: saved:fish_mass\n    implements:     linkml:elements\n    required:       false\n\n  TOTAL:\n    description:    Total number of lice on the fish\n    range:          integer\n    is_a:           column_collected\n    exact_mappings: saved:lice_af_total\n    implements:     linkml:elements\n    required:       false\n\nclasses:\n  TableSchema:\n    implements:\n      - linkml:TwoDimensionalArray\n      - linkml:ColumnOrderedArray\n    slots:\n      - Deployment.date\n      - Sampling.Note\n      - Fish.Weight.g\n      - TOTAL\nSlots are declared in their own section at the top level of the YAML schema file, and then referenced in the table schema class object. This is because the LinkML schema files support a notion of slot reuse: by declaring them in this slots section, they are available to multiple classes in the same LinkML schema file (for instance, if we had another class, called TableSchemaAlt), as well as to other schema files (either a link to the URI of the slot object, or by importing the schema file to access its objects directly).\nFor example, in this example schema, you will note that there is a slot not used in the TableSchema object (Cage.Number), and there is a slot referenced in the TableSchema object which is not declared in the slots section (Sampling.Note). The former is valid (the Cage.Number slot just won’t be included as an attribute of the TableSchema object), whereas the latter is invalid, because this slot does not (yet) exist.\nA typical slot declaration has the following properties: - The top-level name of the slot, for example TOTAL. For the purposes of validation, this should be the exact label used in the data file which is to be validated against this schema file. - description: Free text description of the column, while not required, strongly advisable to be included - range: The underlying data type of the column. Valid base types are boolean, integer, float (or double), or string. This can be inadequate when the column is a mixture of text and numeric data, e.g. consider the Cage.Number example. In these cases, specify any_of with a list of range directives, as in the Cage.Number example above. - exact_mappings: Link/map columns to equivalents in the ontology/data model, or in other schema files. For example, the TOTAL column/slot above directly maps to values like saved:lice_af_total. There are further notions of mappings, since there are a number of situations in which there isn’t an exact mapping: you can use broad_mappings, narrow_mappings, close_mappings and related_mappings - implements: External slot definition which the column slot implements. We are validating these with LinkML, so at least semantically, it is important to include linkml:elements at minimum. If the slot implements any other slot definition, turn it into a list with linkml:elements and additional definitions as separate list elements. - required: Set as true/false depending on whether the data included have missing values. See the section “Dealing with missing data” in the troubleshooting/debugging section for more information on this and validation.\nFurther note the inclusion of the implements directive in the TableSchema class definition. Including this was based on LinkML’s documentation prior to version 1.7.0. They have since added support for arrays, so including this is not strictly necessary, especially given the suggested class URIs do not actually resolve.",
    "crumbs": [
      "Fish data utilities",
      "YAML schema writing"
    ]
  },
  {
    "objectID": "doc/utils/schemata.html#outline",
    "href": "doc/utils/schemata.html#outline",
    "title": "YAML schema writing",
    "section": "",
    "text": "Each data file has a schema, which we use both to validate and describe data. The SAVED data model/ontology is based on LinkML, with schema files authored in the YAML format. It is useful to think about these files as being made up of two main elements:\n\nMetadata about the schema file. These declare certain fields essential for validation of the schema (e.g. a unique identifier and name for the schema), as well as extra, optional data such as its license, or when it was last updated.\nFields which describe the structure of data files to be validated against the schema. These associate the names columns with a description, a data type (e.g. text field, or number), a provenance (e.g. modelled, or simulated), and with a variable described in the data model (e.g. saved:lice_af_total).\n\nTop-level fields of a typical schema are summarised as follows, including what is strictly necessary for a schema file to be valid a LinkML schema file, what is necessary for validation, as well as a few other fields which you may want to include. This summary is not exhaustive, in fact, any fields in the LinkML model should be valid. The example schema files included with the fish data utilities were originally devised based on the JSON/CSVW schema files which we were writing before, as well as from following the LinkML tutorial. You can choose to enrich your schema file with additional fields beyond what is needed just for validation, then.\n\n\n\n\n\n\n\n\n\nField\nDescription\nDo I need this?\nExample\n\n\n\n\nid\nFully unique resource identifier: a URI\nYes\nid: https://marine.gov.scot/metadata/saved/rap/sentinel_cages_sampling\n\n\nname\nName of the resource, an ‘atom’ (text field with no spaces, only underscores)\nYes\nname: sentinel_cages_sampling\n\n\ntitle\nLonger title of the schema: this may be free text\nYes\ntitle: Sentinel cages sampling information schema\n\n\ndescription\nLong-form free text description of the schema\nNo\ndescription: This is the example schema for sentinel cages sampling…\n\n\nprefixes\nList of mappings between an ‘atom’ and URI prefix which may be prefixed to identifiers\nYes\nSee note\n\n\nimports\nImport of slots/types/classes from other LinkML schema resources\nYes\nSee note\n\n\ndefault_prefix\nDefault prefix declaring URI to map to identifiers in the schema\nYes\ndefault_prefix: mssamp\n\n\nlicense\nURI/identifier of license associated with schema file\nNo\nlicense: https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\n\n\nkeywords\nList of keywords associated with schema, each list item may be free text\nNo\nSee note\n\n\ncreated_by\n‘Atom’ indicating original creator of schema\nNo\ncreated_by: marinescot\n\n\nmodified_by\n‘Atom’ indicating who last modified schema\nNo\nmodified_by: saved\n\n\nlast_updated_on\nTime-stamp (ISO8601 YYYY-MM-DD format) indicating last update\nNo\nlast_updated_on: \"2024-04-26\"",
    "crumbs": [
      "Fish data utilities",
      "YAML schema writing"
    ]
  },
  {
    "objectID": "doc/utils/schemata.html#yaml-syntax",
    "href": "doc/utils/schemata.html#yaml-syntax",
    "title": "YAML schema writing",
    "section": "",
    "text": "YAML documents are made up of blocks, with indentation indicating membership of elements, and elements as mappings between ‘atoms’ and values. For example, in the LinkML schema, the slot for the Sampling.Note column is declared as follows:\nslots:\n  Sampling.Note:\n    description: \"Notes on issues with sampling\"\n    range:       string\n    required:    false\n    exact_mappings:\n      -  saved:date\nKey things to keep in mind: 1. YAML is a machine-readable language, and indentation matters. In the above example, if range was indented two spaces fewer, it would not be considered to be part of the Sampling.Note block. 2. It is not necessary to quote the majority of text fields (even free text), except if the text includes control characters used by YAML, such as colons (which mark key/value pairs), dashes (which designate lists), or hashes (which designate comments). 3. If a text field is multi-line (sometimes useful for descriptions), you need to use &gt;- and indent the text in question below. The end of the indentation, here, rather than quotes, marks the end of the text field. 4. The order of fields does not strictly matter, but at least in terms of writing schema files for LinkML, it makes good sense to follow the split described above (metadata describing the schema; fields describing structure of data) and the order effectively described in this document, and indicated in the examples.",
    "crumbs": [
      "Fish data utilities",
      "YAML schema writing"
    ]
  },
  {
    "objectID": "doc/utils/schemata.html#metadata-about-the-schema-file",
    "href": "doc/utils/schemata.html#metadata-about-the-schema-file",
    "title": "YAML schema writing",
    "section": "",
    "text": "The exact distinction between these is not at first glance very clear. It can be summarised as follows:\n\nThe identifier (id) is a unique resource where the schema file may (perhaps should) live in the future. The examples use the “rap” directory under the SAVED prefix hosted on the Marine Scotland namespace. If you are not Marine Scotland, it is preferable to choose a URI which you control and could host something there. In any case, this field is necessary for a schema to be valid and to validate data files.\nThe name field is the a unique name for the schema. This is an “atom” with no spaces, only underscores. It is likely easiest just to use the end of the identifier above, e.g. for the ID https://marine.gov.scot/metadata/saved/rap/sentinel_cages_site, one might choose the name sentinel_cages_site.\nThe title of the resource is a free text field. Keep it relatively short as this will make the generated output (web pages) clearer.\nThe description is a longer free text field. Whereas the identifier, name and title fields are mandatory, this description is not. This is the place to put longer descriptions of the data, rather than the title field, although they both allow free text.\n\nid: http://marine.gov.scot/metadata/saved/rap/sentinel_cages_site/\nname:  sentinel_cages_site\ntitle: Sentinel cages station information schema\ndescription: &gt;-\n  This is an example for the purposes of testing fisdat(1) and fisup(1)\n  This is a multi-line text field, the start of which is the `&gt;-' section,\n  with the end indicated by change in indentation\n\n\n\n\n\nPrefixes are a collection of between an atom (text field with no spaces, only underscores) and a URI prefix. These mappings are prefixes because they are used to create unique identifiers from names, i.e. they prefix the name of a thing. Rather than type out the name of the URI every time, we use the short atom to refer to it.\nConsider the following set of prefixes:\nprefixes:\n  linkml: https://w3id.org/linkml/\n  saved:  https://marine.gov.scot/metadata/saved/schema/\n  rap:    https://marine.gov.scot/metadata/saved/rap/\n  mssite: https://marine.gov.scot/metadata/saved/rap/sentinel_cages_site/\n  mssamp: https://marine.gov.scot/metadata/saved/rap/sentinel_cages_sampling/\n  xsd:    http://www.w3.org/2001/XMLSchema#\nIdentifiers are referenced using the form &lt;atom&gt;:&lt;resource name&gt;, and are expanded to &lt;prefix URI&gt;&lt;resource name&gt;. The last character of the prefix URI is important because the expansion does not assume anything about it, e.g. both the xsd (which ends in a hash) and the other prefixes are valid. The expansion is very simple. The identifier saved:lice_af_total would expand to https://marine.gov.scot/metadata/saved/schema/lice_af_total.\n\n\n\nThe default prefix is a single reference to a prefix listed as above:\ndefault_prefix: mssamp\nSome things to keep in mind: - The purpose of the default prefix is to create unique identifiers for any element declared in the current schema file. However, it is possible that this prefix could be used across different schema files. Indeed, this is the approach taken for producing data models using LinkML schema files: they share a single prefix, and can import each other. - For example, in the Sampling.Note example above, other documents could refer to this identifier using the URI https://marine.gov.scot/metadata/saved/rap/sentinel_cages_sampling/Sampling.Note (expanded from mssamp:Sampling.Note). - Indeed, external schema files may also declare some prefix (it could be the same, mssamp; or e.g. mssamp_alt, as long as it maps to the same URI as mssamp does in this document), they could also refer to it using that prefix. - When declaring prefixes, although they are arbitrary, there tends to be conventions for certain well-known prefixes, a sample list of which is summarised here.\nThe basic idea here, then, is that we need to declare a default prefix which is unique to this document, to identify elements in this document, both internally and externally.\n\n\n\nLinkML has a type called UrioOrCurie. This is either a full URI, or the compact equivalent. That is, the compact URI, or CURIE, is a succint way to refer to resources under the prefix in question, and it also allows us to name the prefix to some short-hand which describes its role.\nConsider the saved prefix above (which has a trailing slash). Given a URI, https://marine.gov.scot/metadata/saved/schema/lice_density_collected, then, the compact URI equivalent is anything after the prefix, i.e. saved:lice_density_collected. A space on either side of the colon (e.g. saved: lice_density_collected) is not a valid CURIE, and would, at least in the YAML files, be considered to be part of the YAML syntax, which uses colons extensively.\nSee the following page for a bit more information about the role of URIs and CURIEs: https://cthoyt.com/2021/09/14/curies.html\n\n\n\nImports are a link to an external LinkML schema, from which items declared in the schema are imported.\nConsider the following set of imports:\nimports:\n  linkml:types\n  linkml:datasets\n  saved:core\n  saved:job\nThere is an important distinction between referencing an identifier and importing it. For example, if saved:core in the example above declared the type saved:LatLonType, to use this as a range proper, we would need to import saved:core in the imports directive above. That is, saved:LatLonType is effectively just a URI (it expands to https://marine.gov.scot/metadata/saved/schema/LatLonType), and isn’t usable in a different LinkML schema file just by referencing it. Note that importing it would bring it into the top level, i.e. to use it as a range, we would simply use it as LatLonRange.\n\n\n\nThis hints at the importance of the prefixes and their relation to imports.\n\nAny import must use both a valid prefix, and the resource in question must exist and be a valid LinkML schema file.\nTo be a valid LinkML schema file, declare both the linkml prefix and import linkml:types\nOur schema files are based on our own data model/ontology, so, always declare the saved prefix and import saved:core\nThe schema file must declare a prefix unique to this document, to be set as the default prefix in the document.\nIt is not necessary to import a schema file to reference anything related to the prefix, and in fact, this may cause problems. However, it is always necessary to add a prefix to the prefixes directive before referencing any identifier underneath it, as it will be impossible to expand the identifier into a URI.\n\n\n\n\nYou have probably noticed that both SAVED data model/ontology and the schema files which we are writing are based on LinkML. This partly derives from the design of LinkML itself, which “doesn’t draw any hard and fast distinction between data and metadata, recognising that “metadata” is often defined in relative terms.”\nHere, it can be said that the schema files which we are writing describe data files, whereas the manifest files which the fish data utilities create are data files, which are (usually) in the YAML format.\nA further point which is relevant to this section is that there are circumstances in which YAML schema files will be valid, despite prefixes being used but not declared, whereas they may fail conversion due to this issue. Make sure that all identifiers referenced use a prefix which has been declared.",
    "crumbs": [
      "Fish data utilities",
      "YAML schema writing"
    ]
  },
  {
    "objectID": "doc/utils/schemata.html#describing-data-files",
    "href": "doc/utils/schemata.html#describing-data-files",
    "title": "YAML schema writing",
    "section": "",
    "text": "The LinkML has three related concepts: 1. Classes, which are effectively a way to describe things with attributes 2. Slots, which are attributes, and correspond closely to the columns in our data files 3. Types, which extend basic types (such as numbers or text strings)\nFor validation, at minimum, fisdat(1) expects a couple of things: 1. Declaration of a simple class TableSchema, which is used by the programs to actually load the schema files 2. A set of slots referenced in the schema, corresponding to the columns of the data file in question, which are included as attributes of the TableSchema class\nThe following is a shortened example TableSchema object from the sentinel cages (sampling information) example. We can think of TableSchema as a class which has column attributes.\nslots:\n  Cage.Number:\n    description:    A unique identifier for each cage which links back to station information. Not necessarily a number.\n    any_of:\n      - range:      integer\n      - range:      string\n    is_a:           column_descriptive\n    exact_mappings: saved:cage_id\n    implements:     linkml:elements\n    required:       true\n\n  Deployment.date:\n    description:    Date cage was stocked with fish\n    range:          string\n    is_a:           column_descriptive\n    exact_mappings:\n      - saved:date\n      - saved:deployment_date\n    implements:     linkml:elements\n    required:       true\n\n  Fish.Weight.g:\n    description:    Weight of fish expressed in grams\n    range:          float\n    is_a:           column_collected\n    exact_mappings: saved:fish_mass\n    implements:     linkml:elements\n    required:       false\n\n  TOTAL:\n    description:    Total number of lice on the fish\n    range:          integer\n    is_a:           column_collected\n    exact_mappings: saved:lice_af_total\n    implements:     linkml:elements\n    required:       false\n\nclasses:\n  TableSchema:\n    implements:\n      - linkml:TwoDimensionalArray\n      - linkml:ColumnOrderedArray\n    slots:\n      - Deployment.date\n      - Sampling.Note\n      - Fish.Weight.g\n      - TOTAL\nSlots are declared in their own section at the top level of the YAML schema file, and then referenced in the table schema class object. This is because the LinkML schema files support a notion of slot reuse: by declaring them in this slots section, they are available to multiple classes in the same LinkML schema file (for instance, if we had another class, called TableSchemaAlt), as well as to other schema files (either a link to the URI of the slot object, or by importing the schema file to access its objects directly).\nFor example, in this example schema, you will note that there is a slot not used in the TableSchema object (Cage.Number), and there is a slot referenced in the TableSchema object which is not declared in the slots section (Sampling.Note). The former is valid (the Cage.Number slot just won’t be included as an attribute of the TableSchema object), whereas the latter is invalid, because this slot does not (yet) exist.\nA typical slot declaration has the following properties: - The top-level name of the slot, for example TOTAL. For the purposes of validation, this should be the exact label used in the data file which is to be validated against this schema file. - description: Free text description of the column, while not required, strongly advisable to be included - range: The underlying data type of the column. Valid base types are boolean, integer, float (or double), or string. This can be inadequate when the column is a mixture of text and numeric data, e.g. consider the Cage.Number example. In these cases, specify any_of with a list of range directives, as in the Cage.Number example above. - exact_mappings: Link/map columns to equivalents in the ontology/data model, or in other schema files. For example, the TOTAL column/slot above directly maps to values like saved:lice_af_total. There are further notions of mappings, since there are a number of situations in which there isn’t an exact mapping: you can use broad_mappings, narrow_mappings, close_mappings and related_mappings - implements: External slot definition which the column slot implements. We are validating these with LinkML, so at least semantically, it is important to include linkml:elements at minimum. If the slot implements any other slot definition, turn it into a list with linkml:elements and additional definitions as separate list elements. - required: Set as true/false depending on whether the data included have missing values. See the section “Dealing with missing data” in the troubleshooting/debugging section for more information on this and validation.\nFurther note the inclusion of the implements directive in the TableSchema class definition. Including this was based on LinkML’s documentation prior to version 1.7.0. They have since added support for arrays, so including this is not strictly necessary, especially given the suggested class URIs do not actually resolve.",
    "crumbs": [
      "Fish data utilities",
      "YAML schema writing"
    ]
  },
  {
    "objectID": "doc/utils/index.html",
    "href": "doc/utils/index.html",
    "title": "Fish data utilities overview",
    "section": "",
    "text": "Fish data utilities overview\nAs it stands, the fish data utilities work-flow can be summarised as follows:\n\nWe write schema files for data, which are based on LinkML\nThe fisdat(1) utility validates and appends metadata to the description manifest, which is a data file in YAML or RDF/TTL, the schema of which is the job component of the data model\nThe data description manifest can be edited to describe jobs to be run on the data\nUpon upload, the fisup(1) utility:\n\nChecks that the referenced data exists, and that the checksum matches\nConverts the schema files from YAML to machine-readable RDF/TTL (which can be used independently of the LinkML Python libraries)\nConverts the manifest files from YAML to machine-readable RDF/TTL (or vice versa, since we also support creating/editing the manifest in RDF/TTL)\nUploads the set of data files + schema files + manifest to an external storage hosting provider (such as, at the moment Google Cloud)\n\n\nThe main difference between the schema files and the YAML files, then, is that the schema files describe data, and are valid LinkML schema files, whereas the manifest files are data files which happen to be in YAML format. Editing the files is similar (the syntax is still YAML), but these are not standalone schema files and only a few of the fields valid in LinkML schema files are valid. Simply put, the basic workflow is to generate the manifest files with fisdat(1), perhaps edit the manifest file, then upload the manifest file using fisup(1).",
    "crumbs": [
      "Fish data utilities",
      "Fish data utilities overview"
    ]
  }
]